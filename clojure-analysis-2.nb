(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    219904,       5567]
NotebookOptionsPosition[    202087,       4997]
NotebookOutlinePosition[    202645,       5017]
CellTagsIndexPosition[    202602,       5014]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.61039017736975*^9, 3.610390177870949*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AssociativeUtils`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610123880820364*^9, 3.6101238866531343`*^9}}],

Cell["Basically a big map-reduce. Like everything.", "Text",
 CellChangeTimes->{{3.609797485921159*^9, 3.6097974999096317`*^9}, {
  3.609813155635564*^9, 3.6098131579152527`*^9}, {3.610079925420598*^9, 
  3.61007993204767*^9}, {3.6101239253032837`*^9, 3.61012392733926*^9}}],

Cell[CellGroupData[{

Cell["Utils", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.610380546882833*^9, 3.6103805472338943`*^9}}],

Cell[CellGroupData[{

Cell["General Predicates", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.597034006338381*^9, 3.597034043144265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"notFalseQ", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"x", "  ", "===", " ", "False"}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.596812217777191*^9, 3.596812243885096*^9}, {
  3.596812285218401*^9, 3.596812338290038*^9}, {3.599210785039962*^9, 
  3.599210795757633*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"everyQ", "[", 
   RowBox[{"pred_", ",", " ", "xs_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "sentinel", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fold", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pred", "[", "#2", "]"}], ",", " ", "True", ",", " ", 
           RowBox[{"Throw", "[", 
            RowBox[{"False", ",", " ", "sentinel"}], "]"}]}], "]"}], "&"}], 
        ",", "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
        "xs"}], "]"}], ",", "\[IndentingNewLine]", "sentinel"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"thingQ", "[", "]"}], ":=", " ", "False"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598385035980755*^9, 3.5983850379279013`*^9}, {
  3.59838515429491*^9, 3.5983851684288387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thingQ", "[", "__", "]"}], ":=", " ", "True"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598385170015087*^9, 3.598385179306218*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["let", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.598144549488331*^9, 3.598144552679078*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "let", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598144556156847*^9, 3.5981445587366447`*^9}}],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"let", ",", " ", "HoldAll"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.59814456764146*^9, 3.5981445840324793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"let", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Set", "[", 
        RowBox[{"lhs_", " ", ",", " ", "rhs_"}], "]"}], "]"}], ",", " ", 
      "rst___"}], "}"}], ",", " ", "body___"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lhs", " ", "=", " ", "rhs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"let", "[", 
     RowBox[{
      RowBox[{"{", "rst", "}"}], ",", " ", "body"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598144588165823*^9, 3.598144588720389*^9}, {
   3.598144632230338*^9, 3.598144822971513*^9}, 3.598144954215612*^9, {
   3.610390258256772*^9, 3.610390271647736*^9}, {3.6103903506519003`*^9, 
   3.610390393691846*^9}, {3.610390656296183*^9, 3.610390724617317*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"let", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", " ", "body___"}], "]"}], " ", ":=", " ", 
  "body"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598144825527643*^9, 3.598144838775177*^9}}],

Cell[BoxData[
 RowBox[{"let", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "b"}], ",", 
     RowBox[{"c", "=", "a"}]}], "}"}], ",", " ", "c"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610390285858336*^9, 3.610390293410934*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["List Processing", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.598297150065463*^9, 3.598297172601335*^9}, {
  3.598378644585013*^9, 3.598378646263291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cons", "[", 
   RowBox[{"x_", ",", " ", "xs_List"}], "]"}], ":=", " ", 
  RowBox[{"Prepend", "[", 
   RowBox[{"xs", ",", "x"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.59859047373456*^9, 3.598590494918252*^9}, {
  3.599070402463993*^9, 3.5990704044705067`*^9}}],

Cell["More clojurey fold:", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.598297449606105*^9, 3.598297457605584*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fold2", "[", 
   RowBox[{"f_", ",", " ", "x_", ",", " ", "ys_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"Fold", "[", 
   RowBox[{"f", ",", " ", "x", ",", " ", "ys"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598297258494111*^9, 3.598297287147674*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fold2", "[", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"x_", ",", " ", "ys__"}], "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"fold2", "[", 
   RowBox[{"f", ",", " ", "x", ",", 
    RowBox[{"{", "ys", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598297291381473*^9, 3.598297360569716*^9}, 
   3.598297499877193*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fold2", "[", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"{", "x_", "}"}]}], "]"}], ":=", " ", "x"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.59829736300914*^9, 3.598297389867613*^9}, {
  3.598297437679891*^9, 3.5982974379191303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fold2", "[", 
   RowBox[{"f_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"f", "[", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598297440034258*^9, 3.598297464510479*^9}}],

Cell["Zipmap, etc etc", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.5983109456773443`*^9, 3.59831094912983*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"zipmap", "[", 
   RowBox[{"lhss_List", ",", " ", "rhss_List"}], "]"}], ":=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Rule", ",", " ", 
    RowBox[{"{", 
     RowBox[{"lhss", ",", " ", "rhss"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598309345936727*^9, 3.598309361160018*^9}, {
  3.59830952205179*^9, 3.598309545655805*^9}, {3.598309592721611*^9, 
  3.598309593617312*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"combineAt", "[", 
   RowBox[{"f_", ",", " ", "xs_", ",", " ", "rs_List"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"apl", " ", "=", "\[IndentingNewLine]", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"bldg", ",", " ", "r"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", " ", 
            RowBox[{"lhs", "[", "r", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"bldg", ",", 
            RowBox[{"i", "\[Rule]", 
             RowBox[{"f", "[", 
              RowBox[{
               RowBox[{"bldg", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
               RowBox[{"rhs", "[", "r", "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Fold", "[", 
     RowBox[{"apl", ",", " ", "xs", ",", " ", "rs"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598378666650144*^9, 3.5983787512582903`*^9}, 
   3.598378881896635*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Other Shit", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6103888288639107`*^9, 3.6103888296379347`*^9}, {
  3.610394373657957*^9, 3.6103943752964363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qwikCases", "[", 
   RowBox[{"expr_", ",", " ", "frm_"}], "]"}], ":=", 
  RowBox[{"Cases", "[", 
   RowBox[{"expr", ",", " ", "frm", ",", " ", "\[Infinity]", ",", " ", 
    RowBox[{"Heads", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610078125264853*^9, 3.610078163563168*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qwikPartition", "[", 
   RowBox[{"x_", ",", "n_", ",", "off_"}], "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{"x", ",", "n", ",", "off", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610387596067012*^9, 3.610387609416251*^9}, {
  3.610391801024932*^9, 3.6103918085904016`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qwikPartition", "[", 
   RowBox[{"x_", ",", " ", "n_"}], "]"}], ":=", " ", 
  RowBox[{"qwikPartition", "[", 
   RowBox[{"x", ",", "n", ",", "n"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61038752155919*^9, 3.610387550698324*^9}, {
  3.610387581863616*^9, 3.610387586880423*^9}, {3.6103876215757504`*^9, 
  3.610387627990704*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"columnate", "[", 
   RowBox[{"x_", ",", " ", "rows_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{"x", ",", "rows", ",", "rows", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", "Null", "}"}]}], "]"}], "//", "Transpose"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610388342265007*^9, 3.610388400090472*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Testing", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.60287912501143*^9, 3.6028791294169083`*^9}}],

Cell["\<\
Dependency-free (associative utils may help construct test batteries, though).\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.6029019081698933`*^9, 3.6029019221833897`*^9}, {
  3.602902121458291*^9, 3.602902121729105*^9}, {3.6037398631089163`*^9, 
  3.6037398868866987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "testWalk", ",", "runTests", ",", " ", "is", ",", " ", "notFound", ",", 
    "passed", ",", "failed"}], "]"}], ";", 
  RowBox[{
   RowBox[{"Attributes", "[", "is", "]"}], "=", " ", 
   RowBox[{"{", "HoldAll", "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60289721224224*^9, 3.602897235034136*^9}, {
   3.602901109624857*^9, 3.602901112614876*^9}, {3.602902492834633*^9, 
   3.6029024963810883`*^9}, {3.602902724011547*^9, 3.6029027289262123`*^9}, {
   3.6029067835510406`*^9, 3.602906798016685*^9}, 3.610395158262672*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testWalk", "[", 
   RowBox[{"tests_", ",", "behind_", ",", " ", "ahead_"}], " ", "]"}], ":=", 
  " ", "\[IndentingNewLine]", 
  RowBox[{"testWalk", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "ahead", "]"}], "/.", 
     RowBox[{"Append", "[", 
      RowBox[{"tests", ",", " ", 
       RowBox[{"_", " ", "\[RuleDelayed]", " ", 
        RowBox[{"Throw", "[", 
         RowBox[{"notFound", "[", 
          RowBox[{
           RowBox[{"\"\<behind\>\"", "\[Rule]", "behind"}], ",", " ", 
           RowBox[{"\"\<ahead\>\"", "\[Rule]", " ", "ahead"}]}], " ", "]"}], 
         "]"}]}]}], "]"}]}], ",", " ", 
    RowBox[{"Append", "[", 
     RowBox[{"behind", ",", " ", 
      RowBox[{"First", "[", "ahead", "]"}]}], "]"}], ",", " ", 
    RowBox[{"Rest", "[", "ahead", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.602897489731139*^9, 3.602897638201522*^9}, {
   3.6028976866089153`*^9, 3.602897699774631*^9}, 3.602897831244113*^9, {
   3.6028983761544943`*^9, 3.602898382074605*^9}, {3.602898424774269*^9, 
   3.602898444494355*^9}, {3.602898745659721*^9, 3.602898859893244*^9}, {
   3.602898895604669*^9, 3.602898919290853*^9}, {3.6028990821227837`*^9, 
   3.602899119593362*^9}, {3.60289915474638*^9, 3.602899232028389*^9}, {
   3.602899334625546*^9, 3.602899335169456*^9}, {3.60290193407292*^9, 
   3.602901939267617*^9}, {3.6029020900389233`*^9, 3.602902110551862*^9}, {
   3.6029023490362453`*^9, 3.6029023616421328`*^9}, {3.602902480513864*^9, 
   3.6029024862113533`*^9}, {3.602902645079198*^9, 3.602902658496421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testWalk", "[", 
   RowBox[{"tests_", ",", " ", "behind_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"testWalk", "[", 
     RowBox[{"#", ",", "behind", ",", 
      RowBox[{"{", "}"}]}], "]"}], "&"}], "/@", "tests"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.602897833142717*^9, 3.602897868811491*^9}, {
  3.602898583820779*^9, 3.6028986232873793`*^9}, {3.6028986611938133`*^9, 
  3.6028986911617002`*^9}, {3.602901183668252*^9, 3.602901186307152*^9}, {
  3.602905943236911*^9, 3.602905958675108*^9}, {3.602906047681364*^9, 
  3.602906048785495*^9}, {3.6029061166709948`*^9, 3.602906149332719*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testWalk", "[", 
   RowBox[{
    RowBox[{"r_", " ", "\[Rule]", " ", "m_"}], ",", " ", "behind_", ",", " ", 
    
    RowBox[{"{", "}"}]}], "]"}], ":=", 
  RowBox[{"testWalk", "[", 
   RowBox[{"m", ",", " ", 
    RowBox[{"Append", "[", 
     RowBox[{"behind", ",", " ", "r"}], "]"}], ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.602898445575198*^9, 3.602898564319623*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testWalk", "[", 
   RowBox[{"isForm_is", ",", " ", "behind_", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"SameQ", "@@", "isForm"}], ")"}], ",", "\[IndentingNewLine]", 
    RowBox[{"passed", "[", 
     RowBox[{
      RowBox[{"\"\<path\>\"", "\[Rule]", "behind"}], ",", 
      RowBox[{"Replace", "[", 
       RowBox[{"isForm", ",", " ", 
        RowBox[{
         RowBox[{"is", "[", "xs___", "]"}], "\[RuleDelayed]", " ", 
         RowBox[{"Hold", "[", 
          RowBox[{"SameQ", "[", "xs", "]"}], "]"}]}]}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"failed", "[", 
     RowBox[{
      RowBox[{"\"\<path\>\"", "\[Rule]", "behind"}], ",", " ", 
      RowBox[{"\"\<expected\>\"", "\[Rule]", 
       RowBox[{"Replace", "[", 
        RowBox[{"isForm", ",", " ", 
         RowBox[{
          RowBox[{"is", "[", "xs___", "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"Hold", "[", 
           RowBox[{"SameQ", "[", "xs", "]"}], "]"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"\"\<got\>\"", "\[Rule]", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"isForm", ",", " ", 
         RowBox[{
          RowBox[{"is", "[", "xs___", "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"SameQ", "@@@", 
           RowBox[{"Hold", "@@", 
            RowBox[{"{", 
             RowBox[{"{", "xs", "}"}], "}"}]}]}]}]}], "]"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.602897732169285*^9, 3.602897741133698*^9}, {
  3.602897780248303*^9, 3.602897827899831*^9}, {3.602899289643446*^9, 
  3.602899292019123*^9}, {3.602900973694463*^9, 3.602900973896867*^9}, {
  3.602903042411746*^9, 3.602903129280582*^9}, {3.6029035435947323`*^9, 
  3.6029036167077703`*^9}, {3.602903798062684*^9, 3.602903806284136*^9}, {
  3.6029039787472258`*^9, 3.602903981188623*^9}, {3.602904014619079*^9, 
  3.602904056622548*^9}, {3.602904167806541*^9, 3.602904290333337*^9}, {
  3.602904329962532*^9, 3.602904330066905*^9}, {3.602904412274497*^9, 
  3.602904449106001*^9}, {3.602904548254447*^9, 3.602904557613105*^9}, {
  3.602904634678146*^9, 3.602904674869893*^9}, {3.602967213710788*^9, 
  3.602967249599634*^9}, {3.602988969614584*^9, 3.602988969831164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"runTests", "[", 
   RowBox[{"tests_", ",", 
    RowBox[{"path", ":", 
     RowBox[{"{", "___String", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"testWalk", "[", 
    RowBox[{"tests", ",", 
     RowBox[{"{", "}"}], ",", "path"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.602883993289528*^9, 3.60288402123695*^9}, {
   3.602884054016261*^9, 3.602884106887703*^9}, {3.602884201999894*^9, 
   3.6028842164892797`*^9}, {3.6028842887707863`*^9, 3.602884386426284*^9}, {
   3.6028844527040243`*^9, 3.60288445372865*^9}, {3.602884489792293*^9, 
   3.602884632752591*^9}, {3.602884670403162*^9, 3.6028847272943573`*^9}, {
   3.6028847616471148`*^9, 3.602884781248773*^9}, {3.602884907163056*^9, 
   3.602884933247778*^9}, {3.6028971832918158`*^9, 3.602897185491177*^9}, {
   3.602901068824445*^9, 3.60290108396953*^9}, 3.602901314245582*^9, {
   3.6029013545204163`*^9, 3.602901404292858*^9}, {3.602901636940619*^9, 
   3.602901653280682*^9}, {3.60290171959732*^9, 3.6029017733143873`*^9}, {
   3.602902323493698*^9, 3.602902330323978*^9}, {3.602905965653892*^9, 
   3.6029059667546453`*^9}, 3.6029060312542267`*^9, 3.602906121982332*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"runTests", "[", "tests_", "]"}], ":=", " ", 
  RowBox[{"runTests", "[", 
   RowBox[{"tests", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6029017213023987`*^9, 3.602901741888188*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapper", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.60838720903561*^9, 3.608387213867951*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapper", "[", "f_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"f", ",", "#"}], "]"}], "&"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6084024652451963`*^9, 3.608402482791486*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["asMap", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.608401914279929*^9, 3.6084019164063807`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"asMap", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"lookup", "[", 
    RowBox[{"x", ",", "##"}], "]"}], "&"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60840071125609*^9, 3.608400739659273*^9}, 
   3.608403401871502*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"asMap", "[", 
   RowBox[{"x_", ",", " ", "default_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"{", "##", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "k_", "}"}], "\[RuleDelayed]", 
        RowBox[{"lookup", "[", 
         RowBox[{"x", ",", "k", ",", " ", "default"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"_", "\[RuleDelayed]", " ", 
        RowBox[{"lookup", "[", 
         RowBox[{"x", ",", " ", "##"}], "]"}]}]}], "}"}]}], "]"}], 
   "&"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6084033592373734`*^9, 3.608403373013782*^9}, {
  3.608403414115053*^9, 3.6084035487285547`*^9}, {3.6084039986454773`*^9, 
  3.608404015886221*^9}, {3.608404060500169*^9, 3.6084041202079973`*^9}, {
  3.6084041783472424`*^9, 3.608404188919306*^9}, {3.6084043442843723`*^9, 
  3.6084043478342457`*^9}, {3.6084044058839703`*^9, 3.608404413194457*^9}}],

Cell[BoxData[
 RowBox[{"runTests", "[", "\[IndentingNewLine]", 
  RowBox[{"let", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m1", " ", "=", " ", 
      RowBox[{"someStructure", "[", 
       RowBox[{"\"\<a\>\"", "\[Rule]", " ", "\"\<A\>\""}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"is", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"asMap", "[", "m1", "]"}], "[", "\"\<a\>\"", "]"}], ",", 
        "\"\<A\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"is", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"asMap", "[", 
          RowBox[{"m1", ",", "\"\<C\>\""}], "]"}], "[", "\"\<c\>\"", "]"}], 
        ",", " ", "\"\<C\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"is", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"asMap", "[", "m1", "]"}], "[", 
         RowBox[{"\"\<b\>\"", ",", " ", "\"\<C\>\""}], "]"}], ",", 
        "\"\<C\>\""}], "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.608403556962121*^9, 3.608403719622596*^9}, {
  3.608403750262039*^9, 3.608403887389125*^9}, {3.608403945577671*^9, 
  3.608403946782501*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["qwikReap", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.610441920675005*^9, 3.610441921810149*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "qwikReap", "]"}], "=", " ", "HoldAll"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6105594860445547`*^9, 3.610559497818672*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qwikReap", "[", "expr_", "]"}], ":=", 
  RowBox[{"Replace", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", "expr", "]"}], "\[LeftDoubleBracket]", "2", 
     "\[RightDoubleBracket]"}], ",", " ", 
    RowBox[{
     RowBox[{"{", "x_", "}"}], "\[RuleDelayed]", " ", "x"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6104419230773478`*^9, 3.610441925219699*^9}, {
  3.610441971564928*^9, 3.610441978923195*^9}, {3.610442010792502*^9, 
  3.610442123216238*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphUnion2", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.61044451885425*^9, 3.610444527126739*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "graphUnion2", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610444553760187*^9, 3.610444557548291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphUnion2", "[", "]"}], ":=", 
  RowBox[{"Graph", "[", 
   RowBox[{"{", "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610444473180801*^9, 3.610444534303081*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphUnion2", "[", "g_Graph", "]"}], ":=", "g"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610444645556431*^9, 3.610444650517311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphUnion2", "[", "gs__Graph", "]"}], ":=", 
  RowBox[{"GraphUnion", "[", "gs", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610444492434156*^9, 3.610444500835123*^9}, {
  3.610444536142065*^9, 3.610444582448309*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(more) Graph Utils", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.6035803971691837`*^9, 3.603580406103015*^9}, {
  3.604367219152766*^9, 3.6043672287683363`*^9}}],

Cell[CellGroupData[{

Cell["set graph things", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.604367214482707*^9, 3.604367218027431*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "setGraphOpts", ",", "setGraphVerts", ",", "setGraphEdges", ",", 
   "addGraphOpts", ",", "mapToGraphVerts"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60358456841325*^9, 3.603584571649242*^9}, {
  3.6035846865591593`*^9, 3.603584700238635*^9}, {3.6059648461071367`*^9, 
  3.605964850501925*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"setGraphOpts", "[", 
   RowBox[{"g_Graph", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Graph", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"VertexList", "@", "g"}], ",", 
    RowBox[{"EdgeList", "@", "g"}], ",", " ", "opts"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603398996543165*^9, 3.6033990900779247`*^9}, 
   3.603580382423972*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"setGraphVerts", "[", 
   RowBox[{"g_Graph", ",", "verts_"}], "]"}], ":=", " ", 
  RowBox[{"Graph", "[", 
   RowBox[{"verts", ",", 
    RowBox[{"EdgeList", "[", "g", "]"}], ",", 
    RowBox[{"Options", "[", "g", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603567430333745*^9, 3.603567487270183*^9}, {
   3.605967255391979*^9, 3.605967259719266*^9}, 3.605967354726632*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"setGraphEdges", "[", 
   RowBox[{"g_Graph", ",", "edges_"}], "]"}], ":=", "\[IndentingNewLine]", 
  " ", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", " ", "edges", ",", " ", 
    RowBox[{"Options", "[", "g", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603567488542081*^9, 3.603567516292262*^9}, {
   3.603582361737074*^9, 3.603582396286066*^9}, {3.603582430288156*^9, 
   3.603582472662458*^9}, {3.6035833066404133`*^9, 3.60358330921525*^9}, {
   3.605967266334853*^9, 3.605967267807926*^9}, 3.605967352207353*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addGraphOpts", "[", 
   RowBox[{"g_Graph", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Graph", "]"}]}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"opts2", " ", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "opts", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"Options", "[", "g", "]"}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"VertexList", "@", "g"}], ",", 
      RowBox[{"EdgeList", "@", "g"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"Sequence", "@@", " ", "opts2"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603583996857383*^9, 3.603584043176469*^9}, {
  3.6035841028289223`*^9, 3.6035841355870523`*^9}, {3.603584221524501*^9, 
  3.603584274574106*^9}, {3.603584349436507*^9, 3.6035843834300337`*^9}, {
  3.603584528198731*^9, 3.60358455992328*^9}, {3.603584817730402*^9, 
  3.60358481809898*^9}}],

Cell[BoxData[
 RowBox[{"Options", "@", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "\[Rule]", "b"}], "}"}], ",", " ", 
    RowBox[{"EdgeLabels", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Rule]", "b"}], ")"}], "\[Rule]", "\"\<bla\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605967318763139*^9, 3.605967333440425*^9}}],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "b"}], "}"}], ",", " ", 
   RowBox[{"EdgeLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "\[Rule]", "b"}], ")"}], "\[Rule]", "\"\<bla\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6104450026785927`*^9, 3.610445014229933*^9}}],

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "\[Rule]", "b"}], "}"}], ",", " ", 
    RowBox[{"EdgeLabels", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Rule]", "b"}], ")"}], "\[Rule]", "\"\<bla\>\""}], 
      "}"}]}]}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605967227322589*^9, 3.60596723692071*^9}, {
  3.605967280716756*^9, 3.605967291711206*^9}, {3.610444953182314*^9, 
  3.610444953701166*^9}, {3.610445020430623*^9, 3.6104450217410717`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["get graph things", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6104448890144043`*^9, 3.610444891748629*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getEdgeLabels", "[", "g_Graph", "]"}], ":=", 
  RowBox[{"EdgeLabels", "/.", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Options", "[", "g", "]"}], ",", 
     RowBox[{"_", "\[Rule]", " ", 
      RowBox[{"{", "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610444894993534*^9, 3.61044494449937*^9}, {
  3.610445371469236*^9, 3.610445378752927*^9}, {3.610445410221282*^9, 
  3.6104454239573727`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["mapToGraphVerts, mapToGraphEdges", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.606517370731986*^9, 3.606517389170972*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"mapToGraphVerts", ",", "mapToGraphEdges"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605967436821666*^9, 3.6059674400295763`*^9}, {
  3.606517413067953*^9, 3.6065174159885387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapToGraphVerts", "[", 
   RowBox[{"f_", ",", "g_Graph"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"let", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vs1", "=", 
       RowBox[{"VertexList", "@", "g"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"vs2", "=", 
       RowBox[{"f", "/@", "vs1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"rs", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{"vs1", "\[Rule]", " ", "vs2"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"es", "=", 
       RowBox[{"EdgeList", "@", "g"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"es2", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{"#", ",", "rs", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ")"}], "/@", "es"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"ers", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{"es", "\[Rule]", "es2"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{
     "vs2", ",", "\[IndentingNewLine]", "es2", ",", "\[IndentingNewLine]", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Options", "[", "g", "]"}], "/.", "ers"}], ")"}]}]}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605865943823989*^9, 3.6058660114518547`*^9}, {
   3.605866060271549*^9, 3.605866070097568*^9}, {3.605866168914658*^9, 
   3.605866292580434*^9}, {3.605866349416436*^9, 3.6058665389121723`*^9}, 
   3.605866953278452*^9, {3.605867137166171*^9, 3.605867146048127*^9}, {
   3.60586733528618*^9, 3.6058673604994164`*^9}, {3.6058674246377907`*^9, 
   3.605867518533333*^9}, {3.605867691810853*^9, 3.605867693465281*^9}, {
   3.605867937438654*^9, 3.605867968596799*^9}, {3.605868053822468*^9, 
   3.60586805497262*^9}, {3.605964981249983*^9, 3.6059650008149767`*^9}, {
   3.60596715402521*^9, 3.6059671860074*^9}, 3.6059673599602633`*^9, {
   3.605967446025722*^9, 3.605967447689454*^9}, {3.60596761003519*^9, 
   3.605967744402104*^9}}],

Cell[BoxData[
 RowBox[{"let", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", "b"}], ",", 
         RowBox[{"b", "\[Rule]", "c"}], ",", 
         RowBox[{"c", "\[Rule]", "a"}]}], "}"}], ",", " ", 
       RowBox[{"EdgeLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "\[Rule]", "b"}], ")"}], "\[Rule]", " ", 
          "\"\<bla\>\""}], "}"}]}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"mapToGraphVerts", "[", 
    RowBox[{"foo", ",", "g"}], "]"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6059648980062523`*^9, 3.605964940572133*^9}, {
  3.605967374541745*^9, 3.60596741903363*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapToGraphEdges", "[", 
   RowBox[{"f_", ",", "g_Graph"}], "]"}], ":=", " ", 
  RowBox[{"setGraphEdges", "[", 
   RowBox[{"g", ",", " ", 
    RowBox[{"f", "/@", 
     RowBox[{"EdgeList", "[", "g", "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605865943823989*^9, 3.6058660114518547`*^9}, {
   3.605866060271549*^9, 3.605866070097568*^9}, {3.605866168914658*^9, 
   3.605866292580434*^9}, {3.605866349416436*^9, 3.6058665389121723`*^9}, 
   3.605866953278452*^9, {3.605867137166171*^9, 3.605867146048127*^9}, {
   3.60586733528618*^9, 3.6058673604994164`*^9}, {3.6058674246377907`*^9, 
   3.605867518533333*^9}, {3.605867691810853*^9, 3.605867693465281*^9}, {
   3.605867937438654*^9, 3.605867968596799*^9}, {3.605868053822468*^9, 
   3.60586805497262*^9}, {3.605964981249983*^9, 3.6059650008149767`*^9}, {
   3.60596715402521*^9, 3.6059671860074*^9}, 3.6059673599602633`*^9, {
   3.605967446025722*^9, 3.605967447689454*^9}, {3.60596761003519*^9, 
   3.605967744402104*^9}, {3.6065174270774307`*^9, 3.606517465626741*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["decoration conveniences", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6052648599633093`*^9, 3.605264873153594*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addToolTips", "[", "g_Graph", "]"}], ":=", 
  RowBox[{"setGraphVerts", "[", 
   RowBox[{"g", ",", 
    RowBox[{"Tooltip", "/@", 
     RowBox[{"VertexList", "[", "g", "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604440173005361*^9, 3.6044402009985523`*^9}, 
   3.610194789043695*^9, 3.610444815185606*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addNameLabels", "[", "g_Graph", "]"}], ":=", " ", 
  RowBox[{"addGraphOpts", "[", 
   RowBox[{"g", ",", " ", 
    RowBox[{"VertexLabels", "\[Rule]", " ", "\"\<Name\>\""}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605264874236197*^9, 3.6052649201111183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addEdgeToolTips", "[", "g_Graph", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"let", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"els", "=", 
      RowBox[{"getEdgeLabels", "[", "g", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"els", ",", "\[IndentingNewLine]", "Automatic", ",", 
      RowBox[{"setGraphEdges", "[", 
       RowBox[{"g", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"EdgeList", "[", "g", "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "_", ",", "\[IndentingNewLine]", 
      RowBox[{"let", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tts", "=", "\[IndentingNewLine]", 
          RowBox[{"Append", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Replace", "[", 
             RowBox[{"els", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e_", " ", "\[Rule]", " ", "l_"}], ")"}], 
               "\[RuleDelayed]", " ", 
               RowBox[{"(", 
                RowBox[{"e", "\[Rule]", " ", 
                 RowBox[{"Tooltip", "[", 
                  RowBox[{"e", ",", "l"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"{", "1", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"e_", "\[RuleDelayed]", " ", 
             RowBox[{"Tooltip", "[", 
              RowBox[{"e", ",", "e"}], "]"}]}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"setGraphEdges", "[", 
         RowBox[{"g", ",", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"EdgeList", "@", "g"}], ",", " ", "tts", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdy00ogwEAh/ERTrOY2tYIa8qQsCxbrX3bgSmtnaglzetAsY9yo5y0RnFY
EpmvtQNrtVJzmF2UTbPNKGlWVjbNDuRjLOH9v4en3+nhjc/oJ8ppNFojGVwP
2vocqbxSdLwqhuMtj1K4nbXJoZXo10Bua0kLI0mfizJhcMN5q9kLGTJxCEpH
Xi4gO2xJwGf6zw0UNg3dwaovWR7ypJoiXJIwKpZJiRMhB2ZkHTJYYK9RshvU
U677vFIxMkp5GsjNQmKOaYbTTIExQuoymcZgcwPBuCS1HGQoQyIDC+rno2yY
qg7UQ++mlw+jg842aMr5OiG9pBHCu0mRHK7Ydtwx0vfeWg+M18TyV6SRdLgA
n/wPRRh8S9UlSbs3uBx426XiQnGlgwcDPwo+THukArjwvdsOVTq7BA5vvg5A
3Z9/ayxL/rQ05S/9Yw9+Ghf3YfycdQh7Es4AVNfQz+CRwk7JJOTX0FGmpfwH
BEQUOw==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ornament", "[", "g_Graph", "]"}], ":=", " ", 
  RowBox[{"addEdgeToolTips", "@", 
   RowBox[{"addToolTips", "@", 
    RowBox[{"addNameLabels", "@", "g"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606591253435029*^9, 3.6065912692401257`*^9}, {
  3.606591299464514*^9, 3.606591307688456*^9}, {3.606591338594221*^9, 
  3.6065913405960207`*^9}, {3.606591403311872*^9, 3.6065914092313843`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["singleEdgify", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6035804130145063`*^9, 3.603580423542552*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"singleEdgify", ",", "edgeListTransform"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603582204762931*^9, 3.6035822100317163`*^9}, {
  3.604426829705948*^9, 3.6044268308894567`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"edgeListTransform", "[", 
   RowBox[{"el_List", ",", 
    RowBox[{"v", ":", 
     RowBox[{"(", " ", 
      RowBox[{"Automatic", "|", "True", "|", "False"}], ")"}]}]}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Switch", "[", 
   RowBox[{
   "v", ",", "\[IndentingNewLine]", "Automatic", ",", " ", "el", ",", 
    "\[IndentingNewLine]", "True", ",", 
    RowBox[{"Replace", "[", 
     RowBox[{"el", ",", 
      RowBox[{"UndirectedEdge", "\[Rule]", "DirectedEdge"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"Heads", "\[Rule]", " ", "True"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "False", ",", " ", 
    RowBox[{"Replace", "[", 
     RowBox[{"el", ",", " ", 
      RowBox[{"DirectedEdge", "\[Rule]", " ", "UndirectedEdge"}], ",", 
      RowBox[{"{", "2", "}"}], ",", " ", 
      RowBox[{"Heads", "\[Rule]", " ", "True"}]}], "]"}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.603588459689472*^9, 3.603588525744934*^9}, {
  3.603597210178514*^9, 3.603597214727792*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"edgeListTransform", "[", 
   RowBox[{"Null", ",", " ", "_"}], "]"}], ":=", " ", "Null"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6035908321910677`*^9, 3.603590840138329*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "singleEdgify", "]"}], "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DirectedEdges", "\[Rule]", " ", "Automatic"}], ",", 
    RowBox[{"allowSelfLoops", "\[Rule]", " ", "False"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603581986214396*^9, 3.603582033967548*^9}, {
  3.603589929810676*^9, 3.603589972477746*^9}, {3.603590144765624*^9, 
  3.6035901452063828`*^9}, {3.6035902129428263`*^9, 3.6035902232816896`*^9}, {
  3.603590636396448*^9, 3.603590636892146*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"singleEdgify", "[", 
   RowBox[{"el_List", ",", 
    RowBox[{"OptionsPattern", "[", "singleEdgify", "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"searcher", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "allowSelfLoops", "]"}], ",", 
        "\[IndentingNewLine]", "Identity", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"#", "|", 
          RowBox[{"Reverse", "@", "#"}]}], "&"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"edgeListTransform", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"OptionValue", "[", "DirectedEdges", "]"}]}], "]"}], "&"}], 
     "@", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "el", "]"}], "<", "2"}], ",", 
       "\[IndentingNewLine]", "el", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reap", "[", "\[IndentingNewLine]", 
         RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"ahd", ",", "\[IndentingNewLine]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"e", "=", " ", 
                 RowBox[{"First", "[", "ahd", "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Sow", "[", "e", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{
                  RowBox[{"Rest", "@", "ahd"}], ",", 
                  RowBox[{"searcher", "@", "e"}]}], "]"}]}]}], "]"}]}], "]"}],
            ",", "\[IndentingNewLine]", "el", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"#", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], "&"}]}], "]"}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6034068049044333`*^9, 3.603406825150406*^9}, {
   3.603406953273291*^9, 3.6034069856194963`*^9}, {3.603407017888294*^9, 
   3.6034071682336893`*^9}, {3.6034599414856253`*^9, 
   3.6034599447666683`*^9}, {3.6034803045825577`*^9, 3.603480304782439*^9}, {
   3.603480453880095*^9, 3.60348045859828*^9}, {3.6035736193943157`*^9, 
   3.603573697554948*^9}, {3.603580326502701*^9, 3.6035803552816877`*^9}, {
   3.6035805035326567`*^9, 3.60358054338976*^9}, {3.603581978470222*^9, 
   3.603582010959361*^9}, {3.603582060655716*^9, 3.603582199015664*^9}, 
   3.603582242729188*^9, {3.603582673002977*^9, 3.60358267389986*^9}, {
   3.6035829340633583`*^9, 3.603582975531966*^9}, {3.603583055089085*^9, 
   3.603583056561221*^9}, {3.6035832314110622`*^9, 3.603583242865078*^9}, {
   3.6035885399876842`*^9, 3.603588581169072*^9}, {3.603590032147407*^9, 
   3.6035901223609943`*^9}, {3.603590239622054*^9, 3.6035902882245083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"singleEdgify", "[", 
   RowBox[{"g_Graph", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "singleEdgify", "]"}]}]}], "]"}], ":=", 
  " ", 
  RowBox[{"setGraphEdges", "[", 
   RowBox[{"g", ",", 
    RowBox[{"singleEdgify", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "g", "]"}], ",", "opts"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6035804273701982`*^9, 3.603580452172338*^9}, {
   3.603582717801991*^9, 3.603582761940308*^9}, 3.6035828277638206`*^9, {
   3.603590464499312*^9, 3.603590556173889*^9}, {3.603590646987626*^9, 
   3.603590650142606*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["extractVertexCoordinates", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.605150033394562*^9, 3.605150051999166*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "extractVertexCoordinates", ",", " ", "extractVertexCoordinateRules", ",", 
   "extractGraphPlotCoordinates", ",", "overlaySubgraph"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605150889138006*^9, 3.6051508932734947`*^9}, {
  3.605152514429867*^9, 3.605152518941277*^9}, {3.605961914523106*^9, 
  3.605961914797936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractGraphPlotCoordinates", "[", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"Annotation", "[", 
      RowBox[{"_", ",", 
       RowBox[{"VertexCoordinateRules", "\[Rule]", " ", "vcr_"}]}], "]"}], 
     ",", "___"}], "]"}], "]"}], ":=", "vcr"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605945874035026*^9, 3.6059458971700077`*^9}, {
  3.605945942323119*^9, 3.605945996426798*^9}, {3.605946111193595*^9, 
  3.605946159628414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractVertexCoordinates", "[", "g_Graph", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"VertexCoordinates", "/.", 
   RowBox[{"AbsoluteOptions", "[", 
    RowBox[{"g", ",", " ", "VertexCoordinates"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605150037609029*^9, 3.605150077498467*^9}, {
  3.605150649812519*^9, 3.605150680185289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractVertexCoordinates", "[", "g_Graphics", "]"}], ":=", 
  RowBox[{"extractGraphPlotCoordinates", "@", "g"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605150037609029*^9, 3.605150077498467*^9}, {
  3.605150649812519*^9, 3.605150680185289*^9}, {3.605961988560046*^9, 
  3.605961999783969*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractVertexCoordinates", "[", 
   RowBox[{"g_Graph", ",", " ", "verts_List"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"verts", "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"VertexList", "@", "g"}], "\[Rule]", " ", 
     RowBox[{"extractVertexCoordinates", "@", "g"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605150083031311*^9, 3.6051501419451227`*^9}, {
  3.605150235157872*^9, 3.6051503946888847`*^9}, {3.6051504833273697`*^9, 
  3.6051506084876966`*^9}, {3.605150767627833*^9, 3.60515077814573*^9}, {
  3.605150935838694*^9, 3.6051509427084084`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractVertexCoordinateRules", "[", "g_Graph", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", 
    RowBox[{"extractVertexCoordinates", "[", "g", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603587468326333*^9, 3.603587495450966*^9}, {
  3.6051522623372793`*^9, 3.605152288069463*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"overlaySubgraph", "[", 
   RowBox[{"g_Graph", ",", "sg_Graph"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{"g", ",", "\[IndentingNewLine]", 
    RowBox[{"addGraphOpts", "[", 
     RowBox[{"sg", ",", "\[IndentingNewLine]", 
      RowBox[{"VertexCoordinates", "\[Rule]", " ", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VertexList", "[", "sg", "]"}], "/.", 
         RowBox[{"extractVertexCoordinateRules", "[", "g", "]"}]}], ")"}]}]}],
      "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60358366298326*^9, 3.603583808977558*^9}, {
  3.6035839359914007`*^9, 3.603583936526157*^9}, {3.603584947333624*^9, 
  3.603584948072948*^9}, {3.6035864820862207`*^9, 3.603586567383026*^9}, {
  3.6035866163978977`*^9, 3.603586770744676*^9}, {3.603586800856783*^9, 
  3.603586847772805*^9}, {3.6035868952409163`*^9, 3.6035869005818033`*^9}, {
  3.603586943626968*^9, 3.603586950983913*^9}, {3.603587055404976*^9, 
  3.603587119812211*^9}, {3.603587212152812*^9, 3.603587229469784*^9}, {
  3.6035872689546967`*^9, 3.603587326762968*^9}, {3.6035875289496737`*^9, 
  3.6035875402503033`*^9}, {3.6051521986846657`*^9, 3.605152199798333*^9}, {
  3.605152295502674*^9, 3.605152299374258*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["toGraph", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.60359110928476*^9, 3.603591111083811*^9}, {
  3.603591246176423*^9, 3.603591246320265*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "toGraph", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6066875688896227`*^9, 3.606687571559601*^9}}],

Cell["Not sure what the point of this is, whatever", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.606687554680064*^9, 3.606687558918105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"toGraph", "[", "xs___", "]"}], ":=", 
  RowBox[{"Graph", "[", "xs", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6035912635719233`*^9, 3.603591270303437*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"toGraph", "[", "g_Graph", "]"}], ":=", " ", "g"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6035921463350897`*^9, 3.603592152809598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"toGraph", "[", "Null", "]"}], ":=", 
  RowBox[{"Graph", "[", 
   RowBox[{"{", "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6035912486541557`*^9, 3.603591256152364*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["nullGraphQ", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.606688232264576*^9, 3.606688233489655*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nullGraphQ", "[", "_", "]"}], ":=", " ", "False"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606688498942009*^9, 3.6066885039395723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nullGraphQ", "[", "g_Graph", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"VertexList", "[", "g", "]"}], "\[Equal]", 
   RowBox[{"{", "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606688234481072*^9, 3.60668823616019*^9}, {
  3.6066883014082212`*^9, 3.606688319134684*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["fix ReverseGraph", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.606688120268673*^9, 3.606688128763822*^9}}],

Cell["Note: unprotecting graph. Deal with it.", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.606688369291543*^9, 3.606688375290506*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Unprotect", "[", "Graph", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606688129742612*^9, 3.606688174351755*^9}, 
   3.606688520215103*^9}],

Cell[BoxData[
 RowBox[{"Graph", "/:", " ", 
  RowBox[{"ReverseGraph", "[", 
   RowBox[{"g_Graph", "?", "nullGraphQ"}], "]"}], ":=", "g"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606688186020666*^9, 3.606688190422337*^9}, {
  3.606688331186288*^9, 3.606688350322435*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getATree, getADag", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.606687369118392*^9, 3.6066873737653*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"getATree", ",", "getADag"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6066875741898947`*^9, 3.60668758230453*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "getATree", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"DirectedEdges", "\[Rule]", " ", "Automatic"}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603588355433235*^9, 3.6035883877240257`*^9}, {
  3.60668739271264*^9, 3.606687393487979*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getATree", "[", 
   RowBox[{"g_Graph", ",", " ", "v_", ",", " ", 
    RowBox[{"OptionsPattern", "[", "getATree", "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"edgeListTransform", "[", 
     RowBox[{"#", ",", 
      RowBox[{"OptionValue", "[", "DirectedEdges", "]"}]}], "]"}], "&"}], "@",
    "\[IndentingNewLine]", 
   RowBox[{"car", "@", 
    RowBox[{"car", "@", 
     RowBox[{"cdr", "@", 
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cur", "=", "v"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"BreadthFirstScan", "[", 
          RowBox[{"g", ",", "v", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<PrevisitVertex\>\"", "\[Rule]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Set", "[", 
                 RowBox[{"cur", ",", "#"}], "]"}], "&"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<FrontierEdge\>\"", "\[Rule]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sow", "[", 
                 RowBox[{"#", "/.", 
                  RowBox[{
                   RowBox[{"e_", "[", 
                    RowBox[{"as___", ",", " ", "cur", ",", " ", "bs___"}], 
                    "]"}], "\[RuleDelayed]", 
                   RowBox[{"e", "[", 
                    RowBox[{"cur", ",", "as", ",", "bs"}], "]"}]}]}], " ", 
                 "]"}], "&"}], ")"}]}]}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603575253456121*^9, 3.6035752550023518`*^9}, {
   3.6035752911608047`*^9, 3.603575383466587*^9}, {3.603575462071376*^9, 
   3.603575482682747*^9}, {3.6035756361917267`*^9, 3.603575680019202*^9}, {
   3.6035757205799294`*^9, 3.603575721641361*^9}, {3.6035807158054953`*^9, 
   3.6035807427546*^9}, {3.603581109769557*^9, 3.6035811156995573`*^9}, {
   3.603581179557386*^9, 3.6035811800676727`*^9}, {3.603588393083996*^9, 
   3.603588400341494*^9}, {3.603588675303671*^9, 3.603588714261238*^9}, 
   3.603589026315831*^9, {3.603589131150671*^9, 3.603589256198762*^9}, {
   3.6035893523944397`*^9, 3.603589358670869*^9}, {3.603589421148554*^9, 
   3.603589465480204*^9}, 3.603590798492489*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getADag", "[", 
   RowBox[{"g_Graph", ",", "v_", ",", " ", 
    RowBox[{"OptionsPattern", "[", "getADag", "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cur", "=", "v"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"BreadthFirstScan", "[", 
          RowBox[{"g", ",", "v", ",", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"edgeHandler", "=", 
               RowBox[{
                RowBox[{"Sow", "[", 
                 RowBox[{"#", "/.", 
                  RowBox[{
                   RowBox[{"_", "[", 
                    RowBox[{"as___", ",", " ", "cur", ",", " ", "bs___"}], 
                    "]"}], "\[RuleDelayed]", 
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{"cur", ",", "as", ",", "bs"}], "]"}]}]}], " ", 
                 "]"}], "&"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<PrevisitVertex\>\"", "\[Rule]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Set", "[", 
                   RowBox[{"cur", ",", "#"}], "]"}], "&"}], ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<FrontierEdge\>\"", "\[Rule]", " ", "edgeHandler"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<CycleEdge\>\"", "\[Rule]", " ", "edgeHandler"}]}],
               "}"}]}], "]"}]}], "]"}]}], "]"}], "]"}], "//", 
      "\[IndentingNewLine]", "cdr"}], "//", "car"}], "//", "car"}], "//", 
   RowBox[{
    RowBox[{"Replace", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Null", "\[Rule]", " ", 
       RowBox[{"{", "}"}]}]}], "]"}], "&"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.603575725873103*^9, 3.603575770667947*^9}, {
  3.6035811413275747`*^9, 3.6035811774923277`*^9}, {3.603583387132986*^9, 
  3.60358338728397*^9}, {3.603583418803656*^9, 3.603583489825976*^9}, {
  3.603583566381391*^9, 3.603583609742869*^9}, {3.60358564097344*^9, 
  3.60358564260713*^9}, {3.603585739164091*^9, 3.603585767864805*^9}, {
  3.603589546740637*^9, 3.6035896902259502`*^9}, {3.60359180782931*^9, 
  3.603591810266323*^9}, {3.606689038689724*^9, 3.606689040558901*^9}, {
  3.606689124144413*^9, 3.6066891889886703`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["upstreamGraph, downstreamGraph, highlightWithNeighborhood", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.606690609203681*^9, 3.60669061955511*^9}, {
  3.606692203867044*^9, 3.606692210562401*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"upstreamGraph", ",", "downstreamGraph"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6066867470904293`*^9, 3.606686750780661*^9}, {
  3.60669039793141*^9, 3.606690406480338*^9}, {3.606690538738009*^9, 
  3.606690539255879*^9}, {3.606690574249092*^9, 3.606690578721747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"upstreamGraph", "[", 
    RowBox[{"g_Graph", ",", "v_"}], "]"}], "/;", 
   RowBox[{"VertexQ", "[", 
    RowBox[{"g", ",", "v"}], "]"}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"getADag", "[", 
       RowBox[{
        RowBox[{"ReverseGraph", "[", "g", "]"}], ",", "v"}], "]"}], "//", 
      "toGraph"}], "//", "ReverseGraph"}], "//", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"#", ",", "v"}], "]"}], "&"}]}], "//", "ornament"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.606686397205988*^9, 3.6066864068936996`*^9}, {
  3.606686502441506*^9, 3.606686599921857*^9}, {3.606686632369534*^9, 
  3.6066866337522097`*^9}, {3.606686722397341*^9, 3.606686817417943*^9}, {
  3.606689936202182*^9, 3.606689951034383*^9}, {3.606690071303434*^9, 
  3.606690097996366*^9}, {3.606690132371478*^9, 3.606690132674377*^9}, {
  3.606690255204164*^9, 3.606690261533525*^9}, {3.606690296619896*^9, 
  3.606690375589738*^9}, {3.606690408513794*^9, 3.606690432364546*^9}, {
  3.606690530561627*^9, 3.606690542799708*^9}, {3.6066913245542316`*^9, 
  3.606691329761462*^9}, {3.6066920301303883`*^9, 3.6066920317646227`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"downstreamGraph", "[", 
    RowBox[{"g_Graph", ",", " ", "v_"}], "]"}], "/;", 
   RowBox[{"VertexQ", "[", 
    RowBox[{"g", ",", "v"}], "]"}]}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getADag", "[", 
      RowBox[{"g", ",", "v"}], "]"}], "//", "toGraph"}], "//", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"#", ",", "v"}], "]"}], "&"}]}], "//", "ornament"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.606690533181328*^9, 3.6066905713628187`*^9}, {
  3.606691333145142*^9, 3.606691337825416*^9}, {3.606692033986782*^9, 
  3.606692035345765*^9}}],

Cell["Differentiated from NeighborhoodGraph:", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.606692139509945*^9, 3.6066921525428553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highlightWithNeighborhood", "[", 
   RowBox[{"g_Graph", ",", " ", "vs_", ",", " ", "n_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"NeighborhoodGraph", "[", 
     RowBox[{"g", ",", "vs", ",", "n"}], "]"}], "//", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"#", ",", "vs"}], "]"}], "&"}]}], "//", "ornament"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.606686112584881*^9, 3.606686203216716*^9}, {
  3.6066921853654633`*^9, 3.606692187092901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highlightWithNeighborhood", "[", 
   RowBox[{"g_Graph", ",", " ", "vs_"}], "]"}], ":=", " ", 
  RowBox[{"highlightWithNeighborhood", "[", 
   RowBox[{"g", ",", "vs", ",", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6066862194729013`*^9, 3.606686229121888*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["qwik highlighting etc tools", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.606690858713327*^9, 3.606690868712439*^9}, {
  3.60669095078331*^9, 3.60669095367836*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"hlNeighborhood", ",", "hlUpstream", ",", "hlDownstream"}], 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606690915405899*^9, 3.606690928199394*^9}, {
  3.6066925730933123`*^9, 3.6066925763095512`*^9}, {3.6066927512252827`*^9, 
  3.606692767170117*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hlNeighborhood", "[", 
   RowBox[{"g_Graph", ",", " ", "vs_", ",", " ", "n_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"NeighborhoodGraph", "[", 
     RowBox[{"g", ",", "vs", ",", "n"}], "]"}], "//", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"Replace", "[", 
          RowBox[{"vs", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"_List", "\[RuleDelayed]", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "Yellow"}], "]"}], "/@", "vs"}]}], ",", 
             RowBox[{"_", "\[RuleDelayed]", " ", 
              RowBox[{"Style", "[", 
               RowBox[{"vs", ",", "Yellow"}], "]"}]}]}], "}"}]}], "]"}]}], 
        "}"}]}], "]"}], "&"}]}], "//", "ornament"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606686112584881*^9, 3.606686203216716*^9}, {
  3.606690931992947*^9, 3.606690993826975*^9}, {3.6066913655974827`*^9, 
  3.606691368867545*^9}, {3.606692008386879*^9, 3.606692012224326*^9}, {
  3.606692624251309*^9, 3.606692624858033*^9}, {3.6066927688958597`*^9, 
  3.6066927775235662`*^9}, {3.6066930474653*^9, 3.606693129433517*^9}, {
  3.606693162276053*^9, 3.606693169173174*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hlNeighborhood", "[", 
   RowBox[{"g_Graph", ",", " ", "vs_"}], "]"}], ":=", " ", 
  RowBox[{"hlNeighborhood", "[", 
   RowBox[{"g", ",", "vs", ",", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6066862194729013`*^9, 3.606686229121888*^9}, {
  3.606690936648909*^9, 3.606690941369319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hlUpstream", "[", 
   RowBox[{"g_Graph", ",", "v_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"upstreamGraph", "[", 
     RowBox[{"g", ",", "v"}], "]"}], "//", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"v", ",", "Yellow"}], "]"}]}], "}"}]}], "]"}], "&"}]}], "//",
    "ornament"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6066907406159782`*^9, 3.6066907917134132`*^9}, {
  3.606690831449808*^9, 3.606690831727909*^9}, {3.606690996948062*^9, 
  3.6066909979137774`*^9}, {3.606691385812874*^9, 3.606691389412806*^9}, {
  3.606691440051093*^9, 3.6066914440021*^9}, {3.606691685952629*^9, 
  3.606691731258691*^9}, {3.606691805437715*^9, 3.606691823381867*^9}, {
  3.60669186137053*^9, 3.606691887963578*^9}, {3.606691939336166*^9, 
  3.606691940455555*^9}, {3.606692015696609*^9, 3.606692017982629*^9}, {
  3.6066925234678297`*^9, 3.60669253691954*^9}, {3.60669258236823*^9, 
  3.6066926043056517`*^9}, {3.6066927800597258`*^9, 3.6066927815558453`*^9}, {
  3.606692831921269*^9, 3.60669283216971*^9}, {3.606692863395248*^9, 
  3.606692894533387*^9}, {3.6066929322419147`*^9, 3.606692987791038*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hlDownstream", "[", 
   RowBox[{"g_Graph", ",", " ", "v_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"downstreamGraph", "[", 
     RowBox[{"g", ",", "v"}], "]"}], "//", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"v", ",", "Yellow"}], "]"}]}], "}"}]}], "]"}], "&"}]}], "//",
    "ornament"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606690794196924*^9, 3.606690834728344*^9}, {
  3.606690999204464*^9, 3.606690999864732*^9}, {3.606691392685163*^9, 
  3.606691393852817*^9}, {3.6066920204806356`*^9, 3.606692022359515*^9}, {
  3.606692610506958*^9, 3.606692610739876*^9}, {3.606692708290753*^9, 
  3.6066927436575613`*^9}, {3.606692820961515*^9, 3.6066928211851873`*^9}, {
  3.6066929992121363`*^9, 3.6066929994580307`*^9}}],

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{".2", ",", ".6", ",", ".5", ",", "1"}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"hlUpDown", "[", 
   RowBox[{"g_Graph", ",", "v_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"let", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"up", "=", 
       RowBox[{"upstreamGraph", "[", 
        RowBox[{"g", ",", "v"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"down", "=", 
       RowBox[{"downstreamGraph", "[", 
        RowBox[{"g", ",", "v"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"intersect", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"GraphIntersection", "[", 
          RowBox[{"up", ",", "down"}], "]"}], "//", "EdgeList"}], "//", 
        "Graph"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"v", ",", "Yellow"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"intersect", ",", 
           RowBox[{"RGBColor", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{".5", ",", ".2", ",", ".6"}], "}"}], "*", "1.5"}], 
             ")"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"down", ",", " ", 
           RowBox[{"Darker", "@", "Green"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"up", ",", 
           RowBox[{"Darker", "@", " ", "Red"}]}], "]"}]}], "}"}]}], "]"}], "//",
      "ornament"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606695511053245*^9, 3.606695586818173*^9}, {
   3.6066956914931297`*^9, 3.606695893194998*^9}, {3.6066959697234993`*^9, 
   3.606696007861003*^9}, {3.606696077232943*^9, 3.606696100514721*^9}, {
   3.606696486516241*^9, 3.6066964979341288`*^9}, {3.606696577376813*^9, 
   3.6066965818038893`*^9}, {3.606696627445784*^9, 3.6066966754966393`*^9}, 
   3.606696751028904*^9, {3.6066969493961267`*^9, 3.6066969495305233`*^9}, {
   3.606696990385104*^9, 3.606696991153418*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Init", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.604247386379744*^9, 3.6042473866996202`*^9}}],

Cell["\<\
Looks like if we dropped clojure-1.5.1.jar rather than clojure-1.2.0.jar into \
lib we mux up JLink. Should probably get the latest version of JLink.jar, or \
something. Ideally we could get it from some repo and handle this via \
Leiningen.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.6042522907574673`*^9, 3.604252372922873*^9}}],

Cell[CellGroupData[{

Cell["load", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.610394468296975*^9, 3.610394470975211*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
   "$Path", ",", 
    "\"\</Users/timothygardner/code/ClojureLink/src/mathematica\>\""}], "]"}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.504139157507572*^9, 3.50413917164657*^9}, {
   3.5041392671130657`*^9, 3.504139315312611*^9}, 3.6024467761494827`*^9, {
   3.604247240962201*^9, 3.60424726349481*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ClojureLink`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.50413914098973*^9, 3.5041391451790648`*^9}, 
   3.5041393175179462`*^9, {3.610395196408408*^9, 3.610395201918747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InstallClojureLink", "[", 
   RowBox[{
   "\"\</Users/timothygardner/code/ClojureLink\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "{", "\"\</Users/timothygardner/code/ClojureLink/src/clj\>\"", "}"}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.504139433014282*^9, 3.504139440081815*^9}, {
   3.504139744383008*^9, 3.504139758328649*^9}, {3.5056215253299723`*^9, 
   3.505621532411501*^9}, {3.5056223422736397`*^9, 3.505622343063479*^9}, {
   3.505622390936513*^9, 3.505622411510468*^9}, {3.505622553537956*^9, 
   3.505622554706108*^9}, {3.505623349783263*^9, 3.505623350227833*^9}, {
   3.5056234031786547`*^9, 3.505623422798609*^9}, {3.5056237219126053`*^9, 
   3.50562373556535*^9}, {3.602446781887697*^9, 3.602446818802354*^9}, 
   3.60424724608107*^9, {3.604247931052925*^9, 3.604247948931633*^9}}],

Cell[BoxData[
 RowBox[{"SetClojureLinkAutoReplacements", "[", 
  RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6107265454877462`*^9, 3.610726556620234*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["qmark", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.60506299473174*^9, 3.6050630025027323`*^9}}],

Cell["\<\
Actually this is a bug. Totally doesn\[CloseCurlyQuote]t work, play around \
with question marks to see how\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.605063352444273*^9, 3.6050633666976013`*^9}}],

Cell[BoxData[
 RowBox[{"qmark", "=", "\"\<\:2047\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60506283082257*^9, 3.6050628419453707`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addQmark", "[", "s_String", "]"}], ":=", " ", 
  RowBox[{"s", "<>", "qmark"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.605062904093499*^9, 3.605062920127*^9}, {
  3.6050629579356947`*^9, 3.6050629593028507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addQmark", "[", "s_Symbol", "]"}], ":=", " ", 
  RowBox[{"Symbol", "@", 
   RowBox[{"addQmark", "@", 
    RowBox[{"ToString", "@", "s"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6050628540070744`*^9, 3.6050629676926107`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["does it float", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.610393616367358*^9, 3.610393617526086*^9}}],

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", "\[IndentingNewLine]", 
  RowBox[{"with\:2011out\:2011str", "[", "\[IndentingNewLine]", 
   RowBox[{"print", "@", 
    RowBox[{"eval", "@", 
     RowBox[{"load\:2011string", "@", "\"\<*clojure-version*\>\""}]}]}], 
   "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604250479412196*^9, 3.604250529676876*^9}, {
   3.604250639830553*^9, 3.604250645989959*^9}, 3.610394416906205*^9, 
   3.610394450052643*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Namespaces", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.604348436405394*^9, 3.60434844149152*^9}}],

Cell[CellGroupData[{

Cell["Problem", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.604364177308529*^9, 3.604364178138789*^9}}],

Cell["\<\
in-ns doesn\[CloseCurlyQuote]t work, getting it to work would require \
rewriting the clojure side of ClojureLink somewhat.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.604348372410725*^9, 3.604348410157895*^9}, {
  3.604348457362369*^9, 3.604348482279851*^9}, {3.604348690764203*^9, 
  3.6043487142891197`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"currentNamespace", "[", "]"}], ":=", 
  RowBox[{"ClojureEvaluate", "[", 
   RowBox[{"with\:2011out\:2011str", "[", 
    RowBox[{"print", "[", 
     RowBox[{"load\:2011string", "[", "\"\<*ns*\>\"", "]"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604348253074171*^9, 3.60434826354874*^9}}],

Cell[BoxData[
 RowBox[{"currentNamespace", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604348355996788*^9, 3.604348357235903*^9}}],

Cell[BoxData[
 RowBox[{"coreSymbol", "=", " ", 
  RowBox[{"ClojureSymbol", "@", "\"\<ClojureLink.core\>\""}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604247975837233*^9, 3.604247985773625*^9}}],

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"in\:2011ns", "@", 
   RowBox[{"quote", "@", "coreSymbol"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"currentNamespace", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6043486091326017`*^9, 3.6043486103741302`*^9}}],

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"in\:2011ns", "@", 
   RowBox[{"quote", "@", 
    RowBox[{"ClojureSymbol", "[", "\"\<clojure.tools.analyzer\>\"", "]"}]}]}],
   "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604248284326832*^9, 3.604248305845849*^9}, {
  3.604345652485627*^9, 3.604345652687806*^9}}],

Cell[BoxData[
 RowBox[{"currentNamespace", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604348365798819*^9, 3.604348367067008*^9}}],

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"require", "[", 
   RowBox[{"quote", "@", "coreSymbol"}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604247993672173*^9, 3.604248006324918*^9}}],

Cell[BoxData[
 RowBox[{"analysisSymbol", " ", "=", " ", 
  RowBox[{"ClojureSymbol", "@", "\"\<ClojureLink.analysis\>\""}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604247514286664*^9, 3.604247529951985*^9}, {
  3.604346148913241*^9, 3.6043461493631973`*^9}}],

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"require", "[", 
   RowBox[{"quote", "[", "analysisSymbol", "]"}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604348202703631*^9, 3.604348215552595*^9}}],

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"in\:2011ns", "[", 
   RowBox[{"quote", "[", "analysisSymbol", "]"}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60434822157169*^9, 3.604348232820772*^9}}],

Cell[BoxData[
 RowBox[{"currentNamespace", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6043482678417673`*^9, 3.604348269072772*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Work-around", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.604349630805613*^9, 3.604349632026394*^9}}],

Cell[TextData[{
 "Use: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"nsreq", "[", "\<\"ClojureLink.analysis\"\>", "]"}], ";", 
   RowBox[{"nsreq", "[", "\<\"clojure.jvm.tools.analyzer\"\>", "]"}], ";"}]], 
  "Input",
  CellChangeTimes->{{3.604355241521142*^9, 3.604355249122266*^9}, {
   3.604362896085126*^9, 3.60436293267015*^9}, {3.605053749189436*^9, 
   3.605053749859435*^9}}]
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.608005289115169*^9, 3.608005291615572*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsreq", "[", "ns_ClojureSymbol", "]"}], ":=", 
  RowBox[{"ClojureEvaluate", "@", 
   RowBox[{"require", "@", 
    RowBox[{"quote", "@", "ns"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604349640923064*^9, 3.604349716123522*^9}, {
  3.60435027365521*^9, 3.6043502763968487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsreq", "[", "ns_String", "]"}], ":=", " ", 
  RowBox[{"nsreq", "[", 
   RowBox[{"ClojureSymbol", "[", "ns", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6043502784641438`*^9, 3.60435030121754*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsq", "[", 
   RowBox[{"ns_", ",", " ", "x_"}], "]"}], ":=", " ", 
  RowBox[{"ClojureSymbol", "[", 
   RowBox[{"StringJoin", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ns", ",", "\"\</\>\"", ",", "x"}], "}"}], "/.", 
      RowBox[{
       RowBox[{"ClojureSymbol", "[", "y_", "]"}], "\[RuleDelayed]", " ", 
       "y"}]}], ")"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.604349259296501*^9, 3.604349322760928*^9}, {
  3.604349380154913*^9, 3.604349420063553*^9}, {3.604349460997456*^9, 
  3.60434948377182*^9}, {3.604349522224559*^9, 3.6043495321021976`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.610572678585537*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parse Project", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.6103952921037397`*^9, 3.6103952937583323`*^9}}],

Cell["\<\
Just whack it with the predefined instaparse thing (for all its many warts)\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.610395296710569*^9, 3.610395315302187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsreq", "[", "\"\<ClojureLink.parser\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610395345023979*^9, 3.6103953552270823`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"parseFile", ",", "parseString"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6103953810669527`*^9, 3.6103953883458014`*^9}, {
  3.610396819622137*^9, 3.610396821712673*^9}, {3.6106446648737173`*^9, 
  3.610644667691845*^9}, {3.610644785906567*^9, 3.610644786321948*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseFile", "[", "f_String", "]"}], ":=", " ", 
  RowBox[{"ClojureEvaluate", "[", 
   RowBox[{"ClojureLink\:2024parser`parse\:2011file", "[", "f", "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.608008045292636*^9, 3.608008074088542*^9}, {
  3.608008106231945*^9, 3.6080081227485*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseString", "[", "s_String", "]"}], ":=", " ", 
  RowBox[{"ClojureEvaluate", "[", 
   RowBox[{"ClojureLink\:2024parser`parse\:2011string", "[", "s", "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610396831072607*^9, 3.6103968480297527`*^9}}],

Cell["Extend this for ClojureScript & whatever", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.6104474311710443`*^9, 3.6104474408599863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"clojureFiles", "[", "path_String", "]"}], ":=", 
  RowBox[{"FileNames", "[", 
   RowBox[{
    RowBox[{"__", "~~", "\"\<.clj\>\""}], ",", "path", ",", "\[Infinity]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610572654031527*^9, 3.610572667983527*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseProject", "[", "path_String", "]"}], ":=", 
  RowBox[{"parseFile", "/@", 
   RowBox[{"clojureFiles", "[", "path", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610447287140325*^9, 3.6104472894926777`*^9}, {
  3.610447322280044*^9, 3.610447324271474*^9}, {3.610447363687046*^9, 
  3.610447409191861*^9}, {3.6104474495082912`*^9, 3.610447449782939*^9}, {
  3.6104477843744583`*^9, 3.6104477857975273`*^9}, {3.610572672469282*^9, 
  3.610572675641975*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.610395426168159*^9, 3.6103954274481993`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseProjectTest", "=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"is", "[", 
      RowBox[{"True", ",", 
       RowBox[{"MatchQ", "[", 
        RowBox[{
         RowBox[{"parseString", "[", "\"\<[bla]\>\"", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\:0589top", ",", 
           RowBox[{"{", 
            RowBox[{"\:0589vector", ",", 
             RowBox[{"{", 
              RowBox[{"\:0589name", ",", "\"\<bla\>\""}], "}"}]}], "}"}]}], 
          "}"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"is", "[", 
      RowBox[{"True", ",", " ", 
       RowBox[{"MatchQ", "[", 
        RowBox[{
         RowBox[{
         "parseFile", "[", 
          "\"\</Users/timothygardner/code/mathematica-clojure-analysis/clj-\
test-project/src/clj_test_project/core.clj\>\"", "]"}], ",", "_List"}], 
        "]"}]}], "]"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6103954342379847`*^9, 3.610395442474114*^9}, {
  3.610395493746976*^9, 3.610395494172647*^9}, {3.610396655662456*^9, 
  3.610396777891797*^9}, {3.6103968751397533`*^9, 3.610396891943015*^9}, {
  3.610731602246356*^9, 3.6107316330890408`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "/@", 
   RowBox[{"runTests", "[", "parseProjectTest", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610396781365239*^9, 3.610396784103044*^9}, {
  3.6103968994149837`*^9, 3.610396906303134*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AST Reference Graph", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.610380516707426*^9, 3.610380541802712*^9}}],

Cell[CellGroupData[{

Cell["basic grammar patterns", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.60800974132269*^9, 3.608009747238162*^9}, {
  3.610381996243292*^9, 3.610381996736763*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"whitespaceP", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\:0589whitespace", ",", " ", "___"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.608009724589842*^9, 3.608009752585112*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["nodify", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6107312986840467`*^9, 3.610731299194854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nodifyRules", "=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"whitespaceP", "\[RuleDelayed]", " ", 
      RowBox[{"Sequence", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\:0589name", ",", " ", "n_"}], "}"}], " ", "\[RuleDelayed]", 
      RowBox[{"symb", "@@", 
       RowBox[{"nsPrefixSplit", "[", "n", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\:0589keyword", ",", " ", 
        RowBox[{"colon", ":", 
         RowBox[{"(", 
          RowBox[{"\"\<:\>\"", "|", "\"\<::\>\""}], ")"}]}], ",", " ", 
        RowBox[{"symb", "[", "s_", "]"}]}], "}"}], "\[RuleDelayed]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"colon", ",", "\[IndentingNewLine]", "\"\<:\>\"", ",", " ", 
        RowBox[{"keyword", "@@", 
         RowBox[{"nsPrefixSplit", "[", "s", "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<::\>\"", ",", 
        RowBox[{"keyword", "[", 
         RowBox[{"\"\<:\>\"", ",", "s"}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Sequence", "@@", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "pfn", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"listForm", "[", 
            RowBox[{"pfn", ",", " ", "n_symb", ",", " ", "body___"}], "]"}], 
           "\[RuleDelayed]", " ", "\[IndentingNewLine]", 
           RowBox[{"definingForm", "[", 
            RowBox[{
             RowBox[{"\"\<type\>\"", "\[Rule]", " ", "pfn"}], ",", " ", 
             RowBox[{"\"\<definiendum\>\"", "\[Rule]", " ", "n"}], ",", " ", 
             RowBox[{"\"\<body\>\"", "\[Rule]", 
              RowBox[{"{", "body", "}"}]}]}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"symb", "/@", 
         RowBox[{"{", 
          RowBox[{
          "\"\<defn\>\"", ",", " ", "\"\<defn-\>\"", ",", "\"\<def\>\"", ",", 
           " ", "\"\<defmacro\>\"", ",", " ", "\"\<defprotocol\>\"", ",", 
           " ", "\"\<defrecord\>\"", ",", " ", "\"\<deftype\>\"", ",", " ", 
           "\"\<definline\>\""}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Sequence", "@@", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"spec", "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tag_", ",", "typ_"}], " ", "}"}], "\[RuleDelayed]", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tag", ",", "body___"}], "}"}], "\[RuleDelayed]", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"typ", "@@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"{", "body", "}"}], ",", " ", 
               RowBox[{"Except", "[", "whitespaceP", "]"}]}], "]"}]}]}], 
           ")"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"spec", ",", " ", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\:0589vector", ",", " ", "vectorForm"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\:0589list", ",", " ", "listForm"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\:0589map", ",", " ", "mapForm"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\:0589set", ",", " ", "setForm"}], "}"}]}], "}"}]}], 
         "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"listForm", "[", 
       RowBox[{
        RowBox[{"symb", "[", "\"\<ns\>\"", "]"}], ",", " ", "___", ",", 
        "nm_symb", ",", " ", "body___"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"nsForm", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<namespaceName\>\"", "\[Rule]", " ", "nm"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<body\>\"", "\[Rule]", " ", 
         RowBox[{"{", "body", "}"}]}]}], "]"}]}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfcn4iPCrZ68cb/1vUgfRx/vztEH0hX/ueiBaRbfb
CER/W3LfFESn5r1JAtG/Luilgej6GMdfIFpxQRiYPqN+4x9Y3+ZixtdA+kvU
TS4QPefSC0EQbXQlVwxEPygrkwLRJv+Xq4HoGRmR6iD6VuvZIBB9XlA7CkTL
XVxdCqLPBGWVgWinrQmzQTSbiP4cEH3Z/td8EO31SXchiK4z370CRC8yDFwJ
oqewVu0E0S4v2g+DaIaF84+D6HsNnjdB9ITK73dB9O4dZU9B9M+9h96A6B+m
t96C6Jn/tzC+AdItzBfA9JTlp31BdIJVhR+I1nJfYfERSJv9+gqmAbpY1uA=

  "]],

Cell["\<\
Seems we have to break the following out to deal with some evaluation order \
weirdness. Also less ugly this way.\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.6107385739770107`*^9, 3.610738596351281*^9}}],

Cell["\<\
Tip o the day: consider breaking rule lists used in RewriteRepeated into \
chain of RewriteRepeated calls on single rules. Much easier to reason about.\
\>", "Text",
 CellChangeTimes->{{3.610744547874054*^9, 3.610744647078911*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"listOrVectorHP", "=", 
   RowBox[{"listForm", "|", "vectorForm"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.610735106579444*^9, 3.610735119020155*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "dotJoin", "]"}]], "Input",
 CellChangeTimes->{{3.610736425208778*^9, 3.6107364287344027`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dotJoin", "[", 
   RowBox[{
    RowBox[{"symb", "[", "a_", "]"}], ",", " ", 
    RowBox[{"symb", "[", "b_", "]"}]}], "]"}], ":=", " ", 
  RowBox[{"symb", "[", 
   RowBox[{"a", "<>", "\"\<.\>\"", "<>", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.610736298989551*^9, 3.6107363063129463`*^9}, {
  3.610736352147744*^9, 3.610736437298697*^9}, {3.610737586093446*^9, 
  3.610737587204777*^9}, {3.6107448872639503`*^9, 3.610744889681342*^9}, {
  3.610744928316441*^9, 3.610744937347218*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"refineRequire", "[", 
   RowBox[{"listOrVectorHP", "[", 
    RowBox[{
     RowBox[{"keyword", "[", "\"\<require\>\"", "]"}], ",", "body___"}], 
    "]"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", "body", "}"}], "/.", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"listOrVectorHP", "[", "x_symb", "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"requireForm", "[", "x", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"listOrVectorHP", "[", 
         RowBox[{"x_symb", ",", " ", 
          RowBox[{"keyword", "[", "\"\<as\>\"", "]"}], ",", " ", "a_symb"}], 
         "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"requireForm", "[", 
         RowBox[{"x", ",", 
          RowBox[{"keyword", "[", "\"\<as\>\"", "]"}], ",", " ", "a"}], 
         "]"}]}]}], "}"}]}], "//.", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"listOrVectorHP", "[", 
      RowBox[{"x_symb", ",", "ys__"}], "]"}], "\[RuleDelayed]", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"{", "ys", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y_symb", "\[RuleDelayed]", " ", 
          RowBox[{"requireForm", "[", 
           RowBox[{"x", ",", " ", "y"}], "]"}]}], ",", " ", 
         RowBox[{"y_requireForm", "\[RuleDelayed]", " ", 
          RowBox[{"Prepend", "[", 
           RowBox[{"y", ",", "x"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "]"}]}]}], "//.", 
   RowBox[{
    RowBox[{"requireForm", "[", 
     RowBox[{"x_symb", ",", " ", "y_symb", ",", " ", "rst___"}], "]"}], 
    "\[RuleDelayed]", " ", 
    RowBox[{"requireForm", "[", 
     RowBox[{
      RowBox[{"dotJoin", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", " ", "rst"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.610735287413632*^9, 3.6107353145832767`*^9}, {
   3.6107353701717052`*^9, 3.610735414582951*^9}, {3.610735621873644*^9, 
   3.610735626303762*^9}, {3.610735658308918*^9, 3.610735659660083*^9}, {
   3.6107357618335648`*^9, 3.61073590603118*^9}, {3.610735937152668*^9, 
   3.6107359506075993`*^9}, {3.6107360143932257`*^9, 3.610736026489064*^9}, {
   3.61073607306196*^9, 3.610736251390873*^9}, {3.6107364744428368`*^9, 
   3.610736527874729*^9}, {3.610736568674261*^9, 3.610736572138917*^9}, {
   3.610737357939131*^9, 3.610737366020123*^9}, {3.610737483026243*^9, 
   3.610737491894567*^9}, 3.6107376223964357`*^9, {3.6107376654165573`*^9, 
   3.610737692997312*^9}, {3.6107378846269693`*^9, 3.610737887010515*^9}, {
   3.61073793989734*^9, 3.6107381089452553`*^9}, {3.610738248744295*^9, 
   3.610738254103159*^9}, {3.610738292947707*^9, 3.6107383226661158`*^9}, {
   3.6107383632114267`*^9, 3.6107383726888523`*^9}, {3.610738414428162*^9, 
   3.610738492457061*^9}, {3.6107386498856373`*^9, 3.610738690859728*^9}, {
   3.610739004591279*^9, 3.6107390443494873`*^9}, {3.6107391353954067`*^9, 
   3.6107391398433313`*^9}, {3.610739188140965*^9, 3.6107391931244097`*^9}, {
   3.610739320643567*^9, 3.610739335130712*^9}, {3.61074347796661*^9, 
   3.610743517912011*^9}, {3.610743580251616*^9, 3.61074358508363*^9}, {
   3.610743660413315*^9, 3.610743698500031*^9}, {3.610744256170288*^9, 
   3.610744318513414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"refineNsForms", "[", "x_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"x", "/.", 
   RowBox[{"nsf_nsForm", "\[RuleDelayed]", " ", "\[IndentingNewLine]", 
    RowBox[{"Replace", "[", 
     RowBox[{"nsf", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<body\>\"", "\[Rule]", " ", "b_"}], ")"}], 
       "\[RuleDelayed]", " ", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         AdjustmentBox["\"\<requireForms\>\"",
          
          BoxMargins->{{0.07689766002823586, -0.07689766002823586}, {0., 
           0.}}], "\[Rule]", " ", "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{"b", ",", " ", 
             RowBox[{
              TagBox[
               StyleBox[
                RowBox[{"r", ":", 
                 RowBox[{"listOrVectorHP", "[", 
                  RowBox[{
                   RowBox[{"keyword", "[", "\"\<require\>\"", "]"}], ",", " ",
                    "___"}], "]"}]}],
                ShowSpecialCharacters->False,
                ShowStringCharacters->True,
                NumberMarks->True],
               FullForm], "\[RuleDelayed]", " ", 
              RowBox[{"refineRequire", "[", "r", "]"}]}]}], "]"}]}], ")"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "1", "}"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610730850988106*^9, 3.61073103758223*^9}, {
   3.610731269390586*^9, 3.6107312701076736`*^9}, 3.6107349560374403`*^9, {
   3.610735024675544*^9, 3.610735045850903*^9}, 3.610735103350326*^9, {
   3.610735135629401*^9, 3.6107351530118856`*^9}, {3.610735241249571*^9, 
   3.610735277713626*^9}, {3.610735310360325*^9, 3.610735310776204*^9}, {
   3.610736829186371*^9, 3.610736830887623*^9}, {3.610737019844137*^9, 
   3.610737021157399*^9}, {3.6107371188490953`*^9, 3.610737204863133*^9}, {
   3.610737334090947*^9, 3.610737334705407*^9}, {3.610737736805439*^9, 
   3.610737772676878*^9}, {3.610737819901196*^9, 3.610737822962838*^9}, {
   3.6107378967140303`*^9, 3.610737898755393*^9}, {3.610738700346332*^9, 
   3.61073870697021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nodify", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"x", "//.", "nodifyRules"}], "//", "refineNsForms"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610730515100505*^9, 3.610730530180799*^9}, {
  3.610730566522615*^9, 3.6107306663328648`*^9}, {3.6107308368962927`*^9, 
  3.61073084829309*^9}, {3.610731219239406*^9, 3.610731237798872*^9}, {
  3.610736718293187*^9, 3.610736719941839*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["nsData", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.609855333414425*^9, 3.6098553405834227`*^9}, {
  3.610124103648223*^9, 3.6101241041672792`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"topDefs", "[", "nsd_nsData", "]"}], ":=", 
  RowBox[{"lookup", "[", 
   RowBox[{"nsd", ",", "\"\<topDefs\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610124129854991*^9, 3.610124141344013*^9}}],

Cell[CellGroupData[{

Cell["toNsData", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6101241122487707`*^9, 3.6101241142951317`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"defsByNamespace", "[", "asts_List", "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"groupBy", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"qwikReap", "[", "\[IndentingNewLine]", 
      RowBox[{"Fold", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ns", ",", " ", "x"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"x", ",", " ", "_nsForm"}], "]"}], ",", 
            "\[IndentingNewLine]", "x", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Sow", "[", 
              RowBox[{"{", 
               RowBox[{"ns", ",", "x"}], "}"}], "]"}], ";", "ns"}]}], "]"}]}],
          "]"}], ",", "\[IndentingNewLine]", "\"\<user\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Cases", "[", 
         RowBox[{"asts", ",", 
          RowBox[{"(", 
           RowBox[{"_nsForm", "|", "_definingForm"}], ")"}], " ", ",", 
          "\[Infinity]"}], "]"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     "First"}], "]"}], "/.", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"lhs_", " ", "\[Rule]", " ", "rhs_"}], ")"}], "\[RuleDelayed]", 
    " ", 
    RowBox[{"(", 
     RowBox[{"lhs", "\[Rule]", " ", 
      RowBox[{"rhs", "\[LeftDoubleBracket]", 
       RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], 
     ")"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.609857006565221*^9, 3.6098570930440407`*^9}, 
   3.609872150217127*^9, {3.6100451789555893`*^9, 3.610045199241926*^9}, {
   3.610045248433338*^9, 3.610045250985991*^9}, 3.610073591124558*^9, {
   3.610073847015432*^9, 3.6100738965104933`*^9}, {3.610075386842208*^9, 
   3.6100754554698772`*^9}, {3.610075702867852*^9, 3.610075705779415*^9}, {
   3.6104388747000427`*^9, 3.610438890048876*^9}, {3.6104421735718927`*^9, 
   3.6104421789693127`*^9}, {3.610443075134761*^9, 3.610443082176201*^9}, {
   3.6107332695563726`*^9, 3.610733276738502*^9}}],

Cell["\<\
Extend the following to deal with \[OpenCurlyDoubleQuote]user\
\[CloseCurlyDoubleQuote] case when we know more about nsForms:\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.610046127879725*^9, 3.610046142260689*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"toNsData", "[", "asts_List", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"defsByNamespace", "[", "asts", "]"}], "/.", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"lhs_", "\[Rule]", " ", "rhs_"}], ")"}], "\[RuleDelayed]", 
     RowBox[{"nsData", "[", 
      RowBox[{
       RowBox[{"\"\<nsForm\>\"", "\[Rule]", " ", "lhs"}], ",", 
       RowBox[{"\"\<topDefs\>\"", "\[Rule]", " ", "rhs"}]}], "]"}]}], 
    "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.609856579204216*^9, 3.6098569940827913`*^9}, 
   3.609857032414054*^9, {3.609872201299589*^9, 3.609872201659171*^9}, {
   3.610045562864251*^9, 3.610045668311777*^9}, {3.610045761444873*^9, 
   3.610045890721991*^9}, {3.6100460488807783`*^9, 3.6100460795593233`*^9}, {
   3.610046112582726*^9, 3.610046123344037*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getNamespaceName", "[", "nsf_nsForm", "]"}], ":=", 
  RowBox[{"lookup", "[", 
   RowBox[{"nsf", ",", " ", "\"\<namespaceName\>\""}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610443859321344*^9, 3.610443878774343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getNamespaceName", "[", "nsdt_nsData", "]"}], ":=", " ", 
  RowBox[{"getNamespaceName", "[", 
   RowBox[{"lookup", "[", 
    RowBox[{"nsdt", ",", " ", "\"\<nsForm\>\""}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610045914137578*^9, 3.6100459477681017`*^9}, {
  3.6104438353111553`*^9, 3.610443905744766*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["expandVars", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.609855287468993*^9, 3.609855289268463*^9}}],

Cell[CellGroupData[{

Cell["expandIntranamespaceVars", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6098152185964193`*^9, 3.609815223027438*^9}, {
  3.609851639972869*^9, 3.609851640564426*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"varMap", "[", "nsd_nsData", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ns", "=", 
      RowBox[{"First", "@", 
       RowBox[{"getNamespaceName", "[", "nsd", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/.", 
        RowBox[{
         RowBox[{"s", ":", 
          RowBox[{"symb", "[", "v_", "]"}]}], "\[RuleDelayed]", 
         RowBox[{"(", 
          RowBox[{"s", "\[Rule]", " ", 
           RowBox[{"symb", "[", 
            RowBox[{"ns", ",", " ", "v"}], "]"}]}], ")"}]}]}], "&"}], ")"}], "/@", 
     RowBox[{"getDefiniendum", "/@", 
      RowBox[{"lookup", "[", 
       RowBox[{"nsd", ",", "\"\<topDefs\>\""}], "]"}]}]}]}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.609815315819428*^9, 3.6098153168268137`*^9}, {
   3.6098153650400143`*^9, 3.609815399185444*^9}, {3.609850419698848*^9, 
   3.609850469002906*^9}, {3.6098505027528677`*^9, 3.609850645201371*^9}, 
   3.609850802192239*^9, 3.6098509462584047`*^9, {3.6098510285632153`*^9, 
   3.609851169399253*^9}, {3.610439429637796*^9, 3.610439430682074*^9}, {
   3.610443354379652*^9, 3.610443358529284*^9}, {3.6104439189652357`*^9, 
   3.610443920220604*^9}, {3.61044397519024*^9, 3.610444017869234*^9}, {
   3.610444079975271*^9, 3.610444173544627*^9}, {3.6104442372058163`*^9, 
   3.610444260141432*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandIntranamespaceVars", "[", 
   RowBox[{"nsds", ":", 
    RowBox[{"{", "___nsData", "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"nsd", ",", "\[IndentingNewLine]", 
      RowBox[{"update", "[", 
       RowBox[{"nsd", ",", " ", "\"\<topDefs\>\"", ",", " ", 
        RowBox[{
         RowBox[{"#", "/.", 
          RowBox[{"varMap", "[", "nsd", "]"}]}], "&"}]}], "]"}]}], "]"}], ",",
     "\[IndentingNewLine]", "nsds"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.609815225491095*^9, 3.6098153076208353`*^9}, {
   3.609815408537516*^9, 3.609815458935131*^9}, {3.609815592775528*^9, 
   3.6098156015023823`*^9}, {3.6098156460241537`*^9, 3.609815650381631*^9}, {
   3.6098491326564283`*^9, 3.6098491529232693`*^9}, 3.610441513803277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["expandAliasedVars", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.60981514956483*^9, 3.609815169300709*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "expandAliasedVars", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6104406807215443`*^9, 3.610440683562714*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aliasMap", "[", "nsd_nsData", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"qwikCases", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lookupIn", "[", 
     RowBox[{"nsd", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<nsForm\>\"", ",", " ", "\"\<requireForms\>\""}], "}"}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"requireForm", "[", 
      RowBox[{"ns_symb", ",", " ", 
       RowBox[{"keyword", "[", "\"\<as\>\"", "]"}], ",", " ", "a_symb"}], 
      "]"}], "\[RuleDelayed]", " ", 
     RowBox[{"(", 
      RowBox[{"a", "\[Rule]", " ", "ns"}], ")"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.609812578526408*^9, 3.609812580023767*^9}, {
  3.60981270214229*^9, 3.609812735518283*^9}, {3.609815388225656*^9, 
  3.609815393808457*^9}, {3.610439932352984*^9, 3.61044004672849*^9}, {
  3.61044008284297*^9, 3.6104400961178713`*^9}, {3.610440128041992*^9, 
  3.610440295963243*^9}, {3.610450261341729*^9, 3.610450266652048*^9}, {
  3.6107395719978733`*^9, 3.610739573168202*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aliasVarMap", "[", "nsd_nsData", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aliasMap", "[", "nsd", "]"}], "/.", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"symb", "[", "a_", "]"}], " ", "\[Rule]", " ", 
      RowBox[{"symb", "[", "ns_", "]"}]}], ")"}], "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"symb", "[", 
       RowBox[{"a", ",", " ", "nm_"}], "]"}], 
      AdjustmentBox["\[RuleDelayed]",
       BoxMargins->{{-0.07689766002823586, 0.07689766002823586}, {0., 0.}}], 
      AdjustmentBox[" ",
       BoxMargins->{{-0.07689766002823586, 0.07689766002823586}, {0., 0.}}], 
      RowBox[{
       AdjustmentBox["symb",
        BoxMargins->{{-0.2306929800847076, 0.2306929800847076}, {0., 0.}}], 
       AdjustmentBox["[",
        BoxMargins->{{-0.07689766002823586, 0.07689766002823586}, {0., 0.}}], 
       
       AdjustmentBox[
        RowBox[{"ns", ",", " ", "nm"}],
        BoxMargins->{{-0.07689766002823586, 0.07689766002823586}, {0., 0.}}], 
       
       AdjustmentBox["]",
        BoxMargins->{{-0.07689766002823586, 0.07689766002823586}, {0., 
         0.}}]}]}], 
     AdjustmentBox[")",
      BoxMargins->{{-0.07689766002823586, 0.07689766002823586}, {0., 
       0.}}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6097945619550743`*^9, 3.609794567004404*^9}, {
   3.609794649130281*^9, 3.60979465053793*^9}, 3.6097947549991198`*^9, {
   3.609795044201004*^9, 3.609795089312398*^9}, {3.609795504470194*^9, 
   3.609795722082026*^9}, {3.6097957932446527`*^9, 3.609795799598997*^9}, {
   3.6097959068441133`*^9, 3.609796209669504*^9}, {3.6097964195712633`*^9, 
   3.609796446320644*^9}, {3.609796702690351*^9, 3.609796730994379*^9}, {
   3.60979680012842*^9, 3.6097968196793213`*^9}, {3.6097969502383003`*^9, 
   3.60979695226099*^9}, {3.609796987100778*^9, 3.609797008330043*^9}, {
   3.6097972286472893`*^9, 3.609797228877557*^9}, {3.609797435352722*^9, 
   3.6097974427525806`*^9}, {3.609812233048337*^9, 3.6098122589750423`*^9}, {
   3.609813038418571*^9, 3.609813132990275*^9}, {3.609813193002799*^9, 
   3.609813196827655*^9}, {3.6098134113079643`*^9, 3.6098134313049803`*^9}, {
   3.609814268737215*^9, 3.609814271735549*^9}, {3.610440387411509*^9, 
   3.610440392785549*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandAliasedVars", "[", 
   RowBox[{"nsds", ":", 
    RowBox[{"{", "___nsData", "}"}]}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"nsd", ",", "\[IndentingNewLine]", 
      RowBox[{"update", "[", 
       RowBox[{"nsd", ",", " ", "\"\<topDefs\>\"", ",", " ", 
        RowBox[{
         RowBox[{"#", "/.", 
          RowBox[{"aliasVarMap", "[", "nsd", "]"}]}], "&"}]}], "]"}]}], "]"}],
     ",", "\[IndentingNewLine]", "nsds"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.609794011345903*^9, 3.609794232188349*^9}, {
   3.609794294595677*^9, 3.609794322082171*^9}, {3.609794363137237*^9, 
   3.609794364802099*^9}, {3.609794395297037*^9, 3.609794558268877*^9}, {
   3.609794747552103*^9, 3.6097948070785017`*^9}, {3.6097950346178417`*^9, 
   3.609795040377336*^9}, {3.609795763603141*^9, 3.6097957895130053`*^9}, {
   3.6097960781384783`*^9, 3.6097960793499527`*^9}, {3.609796656051499*^9, 
   3.6097966965552464`*^9}, {3.6098140238352623`*^9, 
   3.6098140239859037`*^9}, {3.6098148470005283`*^9, 3.609814847727777*^9}, 
   3.610440665683219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["expandVars", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.609855308477116*^9, 3.609855310395756*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expandVars", "[", 
   RowBox[{"nsds", ":", 
    RowBox[{"{", "___nsData", "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"nsds", "//", "expandAliasedVars"}], "//", 
   "expandIntranamespaceVars"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.609793257408784*^9, 3.609793282927454*^9}, 
   3.609793313689014*^9, {3.609793378103998*^9, 3.60979341903165*^9}, {
   3.6097935374926043`*^9, 3.609793548052568*^9}, {3.60979724048482*^9, 
   3.609797251773683*^9}, {3.6097972883234043`*^9, 3.609797290619759*^9}, {
   3.609811934567346*^9, 3.609811936418545*^9}, {3.609813121693036*^9, 
   3.6098131238855743`*^9}, {3.610740487872706*^9, 3.610740488951466*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["nsGraph", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.6100774110303507`*^9, 3.6100774126282797`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stringify", "[", 
   RowBox[{"symb", "[", "s_String", "]"}], "]"}], ":=", "s"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6104456318054323`*^9, 3.610445653207426*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stringify", "[", 
   RowBox[{"symb", "[", 
    RowBox[{"ns_String", ",", "s_String"}], " ", "]"}], "]"}], ":=", 
  RowBox[{"ns", "<>", "\"\</\>\"", "<>", "s"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6104456557427673`*^9, 3.610445680359713*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"defrefs", "[", "df_definingForm", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"qwikCases", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getBody", "[", "df", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", ":", 
      RowBox[{"symb", "[", 
       RowBox[{"_", ",", "_"}], "]"}]}], "\[RuleDelayed]", 
     RowBox[{"stringify", "[", "s", "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610077914602257*^9, 3.610077923103558*^9}, {
  3.610078010667119*^9, 3.610078026165422*^9}, {3.6100780632672586`*^9, 
  3.610078073473043*^9}, {3.610079796783955*^9, 3.610079797612877*^9}, {
  3.610439780150536*^9, 3.610439781186903*^9}, {3.6104455177743187`*^9, 
  3.610445520504147*^9}, {3.61044555724335*^9, 3.610445618079688*^9}, {
  3.610450330995612*^9, 3.6104503577309303`*^9}, {3.610450401946204*^9, 
  3.6104504042034273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"defGraph", "[", "df_definingForm", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", "=", 
      RowBox[{"stringify", "[", 
       RowBox[{"getDefiniendum", "[", "df", "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"{", "d", "}"}], ",", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", "\[DirectedEdge]", "#"}], "&"}], ")"}], "/@", 
        RowBox[{"defrefs", "[", "df", "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610077780496315*^9, 3.610077870134404*^9}, {
  3.610078322625333*^9, 3.6100783319600363`*^9}, {3.6100784357058372`*^9, 
  3.610078436586287*^9}, {3.610439775184567*^9, 3.610439776585741*^9}, {
  3.61044436487989*^9, 3.61044437073256*^9}, {3.6104444498918133`*^9, 
  3.610444453858474*^9}, {3.61044562401705*^9, 3.61044563024793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsGraph", "[", "nsdt_nsData", "]"}], ":=", 
  RowBox[{"graphUnion2", " ", "@@", 
   RowBox[{"(", 
    RowBox[{"defGraph", "/@", 
     RowBox[{"topDefs", "[", "nsdt", "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610077500196782*^9, 3.610077513611018*^9}, {
  3.610077547370698*^9, 3.610077548268529*^9}, {3.610077594518313*^9, 
  3.6100777774720297`*^9}, {3.610079015592778*^9, 3.610079025654418*^9}, {
  3.610444615408032*^9, 3.610444616871752*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsGraph", "[", 
   RowBox[{"nsdts", ":", 
    RowBox[{"{", "___nsData", "}"}]}], "]"}], ":=", 
  RowBox[{"graphUnion2", " ", "@@", 
   RowBox[{"(", 
    RowBox[{"nsGraph", "/@", "nsdts"}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610077426069775*^9, 3.610077493530346*^9}, {
  3.61007903158296*^9, 3.610079045541662*^9}, {3.610444618759241*^9, 
  3.610444620416692*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["graphProject", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.609855294524439*^9, 3.6098552974999743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphProject", "[", "asts_List", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"asts", "//", "nodify"}], "//", "toNsData"}], "//", 
    "expandVars"}], "//", "nsGraph"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60979342796974*^9, 3.609793453469955*^9}, {
  3.60979349000483*^9, 3.609793562452132*^9}, {3.609856608212119*^9, 
  3.60985660992583*^9}, {3.610124022356863*^9, 3.6101240400660267`*^9}, {
  3.610133015296801*^9, 3.610133017512093*^9}, {3.610389733251082*^9, 
  3.610389737163827*^9}, {3.6103898426864243`*^9, 3.610389844553645*^9}, {
  3.610398104316517*^9, 3.610398105532381*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphProject", "[", "projectPath_String", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"projectPath", "//", "parseProject"}], "//", 
   "graphProject"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6097936669693937`*^9, 3.609793723904351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphFile", "[", "f_String", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "//", "parseFile"}], "//", "List"}], "//", 
   "graphProject"}]}]], "Input",
 CellChangeTimes->{{3.6107407319944677`*^9, 3.610740734136409*^9}, {
  3.6107407887181396`*^9, 3.610740818436824*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Review & Todo", "Section",
 CellChangeTimes->{{3.610450647129668*^9, 3.610450653039413*^9}}],

Cell["\<\
This file could be much shorter, and would have been faster to write, if the \
parse tree had been more to the point originally. We definitely want to \
nodify, but the rules could have been much simpler, it seems to me. (Maybe \
not.)

We also lost a fair amount of time dithering over the correct representation, \
and whether it makes sense to nodify things or just recalculate using some \
globally defined patterns without modifying the tree at all. The later course \
of action proved intractably cumbersome with no clear advantages other than \
an appeal to knee-jerk conservatism, stupid in the presence of immutability.\
\>", "Text",
 CellChangeTimes->{{3.610450748725988*^9, 3.6104509210892076`*^9}}],

Cell["\<\
We\[CloseCurlyQuote]ll want some way to tag vars we\[CloseCurlyQuote]re \
graphing with their general type (defrecord, defprotcol, multimethod, \
function, just a thing, etc). Also need some treatment for more subtle \
defining forms like multimethods, protocols, etc.\
\>", "Text",
 CellChangeTimes->{{3.610450649599959*^9, 3.610450730469689*^9}}],

Cell["\<\
Also \[OpenCurlyDoubleQuote]projectGraph\[CloseCurlyDoubleQuote] would be a \
better name than \[OpenCurlyDoubleQuote]graphProject.\[CloseCurlyDoubleQuote]\
\
\>", "Text",
 CellChangeTimes->{{3.6104521421564417`*^9, 3.610452153866802*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Smush", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.6104504321906776`*^9, 3.610450434869288*^9}}],

Cell[CellGroupData[{

Cell["Namespace Communities", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.610450447759166*^9, 3.610450449969255*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getNamespaceName", "[", "s_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringCases", "[", 
    RowBox[{"s", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ns__", "~~", "\"\</\>\"", "~~", "__"}], "\[RuleDelayed]", 
        " ", "ns"}], ",", " ", 
       RowBox[{"_", "\[Rule]", " ", "Null"}]}], "}"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610451219236598*^9, 3.610451300063017*^9}, {
  3.610451696364637*^9, 3.6104517415832*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"varsByNamespace", "[", "g_Graph", "]"}], ":=", 
  RowBox[{"groupBy", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", "getNamespaceName"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610450467072275*^9, 3.610450511468999*^9}, {
   3.6104512161361322`*^9, 3.610451216943095*^9}, {3.610451671864397*^9, 
   3.6104516876892776`*^9}, {3.610451753410536*^9, 3.6104517544198437`*^9}, 
   3.610559033286332*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"namespaceCommunities", "[", "g_Graph", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"varsByNamespace", "[", "g", "]"}], "/.", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ns_", " ", "\[Rule]", " ", "vs_"}], ")"}], "\[RuleDelayed]", 
    " ", 
    RowBox[{"Labeled", "[", 
     RowBox[{"vs", ",", "ns"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6105688799120817`*^9, 3.610568892305365*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unqualified Names", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.610561376171624*^9, 3.610561379433832*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"unqualifiedName", "[", "s_String", "]"}], ":=", " ", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s", ",", 
    RowBox[{
     RowBox[{"__", "~~", "\"\</\>\"", "~~", "n__"}], "\[RuleDelayed]", " ", 
     "n"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6105610410401163`*^9, 3.610561134993113*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"unqualifiedName", "[", "x_", "]"}], ":=", "x"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610561200468191*^9, 3.6105612056994467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"addUnqualifiedNameLabels", "[", "g_Graph", "]"}], ":=", 
  RowBox[{"addGraphOpts", "[", 
   RowBox[{"g", ",", " ", 
    RowBox[{"VertexLabels", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Rule]", " ", 
         RowBox[{"unqualifiedName", "[", "#", "]"}]}], "&"}], "/@", 
       RowBox[{"VertexList", "[", "g", "]"}]}], ")"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.610560867351274*^9, 3.610560869878811*^9}, {
  3.610560962612029*^9, 3.610561031132012*^9}, {3.610561156592494*^9, 
  3.61056119377938*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples, glutch", "Section",
 CellChangeTimes->{{3.610448418558507*^9, 3.610448422475556*^9}, {
  3.6106491691562767`*^9, 3.6106491745319233`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "graphProject", "[", 
   "\"\</Users/timothygardner/code/mathematica-clojure-analysis/clj-test-\
project/src/\>\"", "]"}], "//", "ornament"}]], "Input",
 CellChangeTimes->{{3.610447471751474*^9, 3.61044747221865*^9}, {
  3.610447713007024*^9, 3.610447740406928*^9}, {3.61044779927914*^9, 
  3.61044780079723*^9}}],

Cell[BoxData[
 RowBox[{"let", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{
      "graphProject", "[", 
       "\"\</Users/timothygardner/code/mathematica-clojure-analysis/clj-test-\
project/src/\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"nsm", "=", " ", 
      RowBox[{"varsByNamespace", "[", "g", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"CommunityGraphPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "//", "addToolTips"}], "//", "addUnqualifiedNameLabels"}], 
     ",", 
     RowBox[{"nsm", "/.", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"ns_", " ", "\[Rule]", " ", "vs_"}], ")"}], "\[RuleDelayed]", 
       " ", 
       RowBox[{"Labeled", "[", 
        RowBox[{"vs", ",", "ns"}], "]"}]}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.610447471751474*^9, 3.61044747221865*^9}, {
  3.610447713007024*^9, 3.610447740406928*^9}, {3.61044779927914*^9, 
  3.61044780079723*^9}, {3.61045179864142*^9, 3.6104518634165163`*^9}, {
  3.610451906916009*^9, 3.610451973133786*^9}, {3.61045206369525*^9, 
  3.610452103821458*^9}, {3.610561390366461*^9, 3.6105613937163143`*^9}, {
  3.610561671300583*^9, 3.610561692523582*^9}}],

Cell[BoxData[
 RowBox[{"let", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{
     "graphProject", "[", "\"\</Users/timothygardner/code/ClojureLink\>\"", 
      "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CommunityGraphPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "//", "addToolTips"}], "//", "addUnqualifiedNameLabels"}], 
     ",", 
     RowBox[{"namespaceCommunities", "[", "g", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.610447471751474*^9, 3.61044747221865*^9}, {
  3.610447713007024*^9, 3.610447740406928*^9}, {3.61044779927914*^9, 
  3.61044780079723*^9}, {3.61045179864142*^9, 3.6104518634165163`*^9}, {
  3.610451906916009*^9, 3.610451973133786*^9}, {3.61045206369525*^9, 
  3.610452103821458*^9}, {3.610455748209303*^9, 3.610455750806202*^9}, {
  3.610484308443912*^9, 3.61048432789806*^9}, {3.610484385136224*^9, 
  3.610484387063624*^9}, {3.610561418714509*^9, 3.610561420361993*^9}, {
  3.610568721733883*^9, 3.610568725401903*^9}, {3.6105689243759336`*^9, 
  3.610568946132617*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6105255455662003`*^9, 3.610525552328529*^9}}],

Cell[BoxData[
 RowBox[{"let", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{
      "graphProject", "[", "\"\</Users/timothygardner/code/quil\>\"", "]"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"nsm", "=", " ", 
      RowBox[{"varsByNamespace", "[", "g", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CommunityGraphPlot", "[", 
       RowBox[{
        RowBox[{"g", "//", "addToolTips"}], ",", 
        RowBox[{"nsm", "/.", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ns_", " ", "\[Rule]", " ", "vs_"}], ")"}], 
          "\[RuleDelayed]", " ", 
          RowBox[{"Labeled", "[", 
           RowBox[{"vs", ",", "ns"}], "]"}]}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"g", "//", "EdgeList"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.610447471751474*^9, 3.61044747221865*^9}, {
  3.610447713007024*^9, 3.610447740406928*^9}, {3.61044779927914*^9, 
  3.61044780079723*^9}, {3.61045179864142*^9, 3.6104518634165163`*^9}, {
  3.610451906916009*^9, 3.610451973133786*^9}, {3.61045206369525*^9, 
  3.610452103821458*^9}, {3.610455748209303*^9, 3.610455750806202*^9}, {
  3.610484308443912*^9, 3.61048432789806*^9}, {3.610484385136224*^9, 
  3.610484387063624*^9}, {3.61052555921926*^9, 3.6105255720104837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"let", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"path", "=", 
       RowBox[{"$HomeDirectory", "<>", "\"\</code/tools.nrepl\>\""}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"cfs", "=", 
       RowBox[{"path", "//", "clojureFiles"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"parseFile", "[", "#", "]"}], ",", 
               RowBox[{
                RowBox[{"er", ":", "\:0589index"}], "\[RuleDelayed]", " ", 
                "er"}], ",", "\[Infinity]"}], "]"}]}], "}"}], "&"}], "/@", 
          "cfs"}], ")"}], "//", "Grid"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"path", "//", "graphProject"}], "//", 
        "addUnqualifiedNameLabels"}]}], "}"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.610572610558305*^9, 3.61057262215063*^9}, {
  3.610572694724393*^9, 3.61057279416717*^9}, {3.6105728347355328`*^9, 
  3.610573007132886*^9}, {3.610573064775188*^9, 3.610573094413515*^9}, {
  3.610573149970067*^9, 3.6105731546392517`*^9}, {3.6106415323235617`*^9, 
  3.610641584300267*^9}, {3.610641625143992*^9, 3.610641701892809*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "\"\</Users/timothygardner/code/tools.nrepl/src/main/clojure/clojure/tools/\
nrepl/bencode.clj\>\"", "//", "parseFile"}], "//", "nodify"}]], "Input",
 CellChangeTimes->{{3.610641763996476*^9, 3.61064176519385*^9}, {
  3.6107396235025883`*^9, 3.610739626990603*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nreplGraph", "=", "\[IndentingNewLine]", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "ack/send-ack", "baz/halted?", "be/read-bencode", "be/write-bencode", 
         "clojure.main/repl", "clojure.main/repl-caught", 
         "clojure.main/skip-if-eol", "clojure.tools.logging/error", 
         "clojure.tools.nrepl.ack/client", 
         "clojure.tools.nrepl.ack/client-session", 
         "clojure.tools.nrepl.ack/code", "clojure.tools.nrepl.ack/code*", 
         "clojure.tools.nrepl.ack/colon", 
         "clojure.tools.nrepl.ack/colored-output", 
         "clojure.tools.nrepl.ack/combine-responses", 
         "clojure.tools.nrepl.ack/connect", "clojure.tools.nrepl.ack/e", 
         "clojure.tools.nrepl.ack/handle-ack", 
         "clojure.tools.nrepl.ack/load-file-command", 
         "clojure.tools.nrepl.ack/-main", "clojure.tools.nrepl.ack/message", 
         "clojure.tools.nrepl.ack/new-session", 
         "clojure.tools.nrepl.ack/read-bencode", 
         "clojure.tools.nrepl.ack/read-response-value", 
         "clojure.tools.nrepl.ack/reset-ack-port!", 
         "clojure.tools.nrepl.ack/response-seq", 
         "clojure.tools.nrepl.ack/response-values", 
         "clojure.tools.nrepl.ack/send-ack", 
         "clojure.tools.nrepl.ack/wait-for-ack", 
         "clojure.tools.nrepl.ack/write-netstring", 
         "clojure.tools.nrepl.bencode-test/project-base-dir", 
         "clojure.tools.nrepl/client", "clojure.tools.nrepl/connect", 
         "clojure.tools.nrepl.load-file-sample/dfunction", 
         "clojure.tools.nrepl/message", 
         "clojure.tools.nrepl.middleware/add-stdin", 
         "clojure.tools.nrepl.middleware/bencode", 
         "clojure.tools.nrepl.middleware/default-handler", 
         "clojure.tools.nrepl.middleware/default-middlewares", 
         "clojure.tools.nrepl.middleware/evaluate", 
         "clojure.tools.nrepl.middleware/fn-transport", 
         "clojure.tools.nrepl.middleware/FnTransport", 
         "clojure.tools.nrepl.middleware/handle", 
         "clojure.tools.nrepl.middleware/handle*", 
         "clojure.tools.nrepl.middleware/interruptible-eval", 
         "clojure.tools.nrepl.middleware/linearize-middleware-stack", 
         "clojure.tools.nrepl.middleware/log", 
         "clojure.tools.nrepl.middleware/piped-transports", 
         "clojure.tools.nrepl.middleware/pr-values", 
         "clojure.tools.nrepl.middleware/QueueTransport", 
         "clojure.tools.nrepl.middleware/response-for", 
         "clojure.tools.nrepl.middleware/returning", 
         "clojure.tools.nrepl.middleware/Server", 
         "clojure.tools.nrepl.middleware/session", 
         "clojure.tools.nrepl.middleware/set-descriptor!", 
         "clojure.tools.nrepl.middleware/start-server", 
         "clojure.tools.nrepl.middleware/stop-server", 
         "clojure.tools.nrepl.middleware-test/def-pp-test", 
         "clojure.tools.nrepl.middleware/Transport", 
         "clojure.tools.nrepl.middleware/tty", 
         "clojure.tools.nrepl.middleware/tty-greeting", 
         "clojure.tools.nrepl.middleware/unknown-op", 
         "clojure.tools.nrepl.middleware/uuid", 
         "clojure.tools.nrepl.middleware/wrap-describe", 
         "clojure.tools.nrepl.middleware/wrap-load-file", 
         "clojure.tools.nrepl.misc/response-for", 
         "clojure.tools.nrepl-test/def-repl-test", 
         "clojure.tools.nrepl-test/project-base-dir", 
         "clojure.tools.nrepl-test/repl-server-fixture", 
         "clojure.tools.nrepl.transport/send", "clojure.tools.nrepl/version", 
         "clojure.walk/keywordize-keys", "clojure.walk/stringify-keys", 
         "Integer/parseInt", "io/input-stream", "io/output-stream", 
         "io/reader", "io/writer", "java.util.UUID/randomUUID", 
         "load-file/load-file-code", "Long/MAX_VALUE", 
         "middleware/linearize-middleware-stack", "otherns/bar", 
         "otherns/function", "repl/pretty-print-available?", 
         "server/start-server", "System/getProperty", "System/nanoTime", 
         "t/bencode", "Thread/currentThread", "Thread/sleep", 
         "TimeUnit/MILLISECONDS", "transport/bencode", "transport/recv", 
         "transport/send", "t/recv", "t/send"}, {{{9, 26}, {9, 88}, {9, 95}, {
         10, 9}, {10, 22}, {11, 12}, {16, 93}, {18, 70}, {19, 11}, {19, 19}, {
         19, 80}, {20, 14}, {20, 28}, {20, 74}, {20, 81}, {20, 91}, {21, 9}, {
         22, 9}, {22, 21}, {24, 17}, {26, 26}, {26, 81}, {26, 94}, {27, 15}, {
         27, 24}, {28, 9}, {28, 32}, {28, 33}, {28, 35}, {29, 17}, {29, 92}, {
         31, 87}, {36, 7}, {36, 51}, {36, 54}, {36, 97}, {37, 3}, {37, 4}, {
         37, 37}, {37, 41}, {37, 75}, {37, 76}, {38, 39}, {38, 62}, {38, 
         82}, {40, 5}, {40, 6}, {40, 51}, {40, 97}, {41, 41}, {41, 92}, {42, 
         59}, {42, 72}, {42, 73}, {42, 81}, {43, 44}, {43, 96}, {44, 47}, {45,
          40}, {45, 51}, {45, 52}, {45, 54}, {45, 90}, {45, 97}, {47, 8}, {49,
          59}, {50, 92}, {51, 54}, {53, 57}, {54, 51}, {54, 54}, {54, 97}, {
         56, 1}, {56, 38}, {56, 89}, {57, 52}, {58, 85}, {60, 41}, {60, 60}, {
         60, 63}, {60, 77}, {60, 78}, {62, 51}, {62, 97}, {63, 79}, {64, 
         66}, {64, 70}, {64, 71}, {67, 81}, {68, 87}, {69, 86}}, Null}, {
        VertexLabels -> {
          "clojure.tools.nrepl.middleware/response-for" -> "response-for", 
           "clojure.walk/keywordize-keys" -> "keywordize-keys", 
           "clojure.tools.nrepl.ack/message" -> "message", 
           "clojure.tools.nrepl.middleware/Server" -> "Server", 
           "clojure.tools.nrepl.ack/response-values" -> "response-values", 
           "io/output-stream" -> "output-stream", 
           "clojure.tools.nrepl.middleware/linearize-middleware-stack" -> 
           "linearize-middleware-stack", "clojure.tools.nrepl.ack/-main" -> 
           "-main", "clojure.tools.nrepl.ack/reset-ack-port!" -> 
           "reset-ack-port!", "be/write-bencode" -> "write-bencode", 
           "clojure.tools.nrepl.middleware/interruptible-eval" -> 
           "interruptible-eval", "transport/recv" -> "recv", "ack/send-ack" -> 
           "send-ack", "clojure.tools.nrepl.middleware/uuid" -> "uuid", 
           "clojure.tools.nrepl.middleware/tty" -> "tty", 
           "clojure.tools.nrepl/client" -> "client", 
           "clojure.tools.nrepl.middleware/handle" -> "handle", 
           "clojure.tools.nrepl.ack/colored-output" -> "colored-output", 
           "clojure.tools.nrepl-test/def-repl-test" -> "def-repl-test", 
           "clojure.main/repl-caught" -> "repl-caught", 
           "clojure.tools.nrepl.ack/send-ack" -> "send-ack", 
           "clojure.tools.nrepl.ack/code" -> "code", 
           "clojure.tools.nrepl.middleware/wrap-describe" -> "wrap-describe", 
           "clojure.tools.nrepl/connect" -> "connect", 
           "clojure.tools.nrepl.middleware/set-descriptor!" -> 
           "set-descriptor!", "clojure.walk/stringify-keys" -> 
           "stringify-keys", "clojure.tools.nrepl.middleware/bencode" -> 
           "bencode", "clojure.tools.nrepl.ack/client" -> "client", 
           "io/input-stream" -> "input-stream", 
           "clojure.tools.nrepl.middleware/evaluate" -> "evaluate", 
           "clojure.main/skip-if-eol" -> "skip-if-eol", 
           "clojure.tools.nrepl.middleware/QueueTransport" -> 
           "QueueTransport", "clojure.tools.nrepl.middleware/stop-server" -> 
           "stop-server", "io/reader" -> "reader", "Thread/currentThread" -> 
           "currentThread", "t/bencode" -> "bencode", 
           "clojure.tools.nrepl.ack/write-netstring" -> "write-netstring", 
           "clojure.tools.nrepl.middleware/default-middlewares" -> 
           "default-middlewares", "clojure.tools.nrepl.middleware/returning" -> 
           "returning", "otherns/bar" -> "bar", 
           "clojure.tools.nrepl.middleware/piped-transports" -> 
           "piped-transports", "TimeUnit/MILLISECONDS" -> "MILLISECONDS", 
           "clojure.tools.logging/error" -> "error", 
           "clojure.tools.nrepl/message" -> "message", 
           "clojure.tools.nrepl.middleware/pr-values" -> "pr-values", 
           "be/read-bencode" -> "read-bencode", 
           "clojure.tools.nrepl-test/repl-server-fixture" -> 
           "repl-server-fixture", "repl/pretty-print-available?" -> 
           "pretty-print-available?", 
           "clojure.tools.nrepl.ack/combine-responses" -> "combine-responses",
            "clojure.tools.nrepl.transport/send" -> "send", 
           "clojure.tools.nrepl.middleware/Transport" -> "Transport", 
           "clojure.tools.nrepl.middleware-test/def-pp-test" -> "def-pp-test",
            "baz/halted?" -> "halted?", 
           "clojure.tools.nrepl.ack/response-seq" -> "response-seq", 
           "clojure.tools.nrepl.ack/read-bencode" -> "read-bencode", 
           "clojure.tools.nrepl.ack/new-session" -> "new-session", 
           "clojure.tools.nrepl.middleware/handle*" -> "handle*", 
           "clojure.tools.nrepl.ack/client-session" -> "client-session", 
           "clojure.tools.nrepl.ack/code*" -> "code*", "System/nanoTime" -> 
           "nanoTime", "clojure.tools.nrepl.ack/e" -> "e", 
           "clojure.tools.nrepl-test/project-base-dir" -> "project-base-dir", 
           "clojure.tools.nrepl.ack/connect" -> "connect", "otherns/function" -> 
           "function", "java.util.UUID/randomUUID" -> "randomUUID", 
           "clojure.tools.nrepl.ack/load-file-command" -> "load-file-command",
            "clojure.tools.nrepl.ack/handle-ack" -> "handle-ack", "t/recv" -> 
           "recv", "Thread/sleep" -> "sleep", 
           "clojure.tools.nrepl.bencode-test/project-base-dir" -> 
           "project-base-dir", "clojure.tools.nrepl.ack/wait-for-ack" -> 
           "wait-for-ack", "clojure.tools.nrepl.middleware/wrap-load-file" -> 
           "wrap-load-file", "clojure.tools.nrepl.middleware/tty-greeting" -> 
           "tty-greeting", "io/writer" -> "writer", 
           "clojure.tools.nrepl.middleware/add-stdin" -> "add-stdin", 
           "clojure.tools.nrepl.load-file-sample/dfunction" -> "dfunction", 
           "Long/MAX_VALUE" -> "MAX_VALUE", 
           "clojure.tools.nrepl.misc/response-for" -> "response-for", 
           "clojure.tools.nrepl.middleware/FnTransport" -> "FnTransport", 
           "clojure.tools.nrepl.ack/colon" -> "colon", 
           "clojure.tools.nrepl.middleware/session" -> "session", 
           "clojure.tools.nrepl.middleware/default-handler" -> 
           "default-handler", "clojure.tools.nrepl.ack/read-response-value" -> 
           "read-response-value", 
           "clojure.tools.nrepl.middleware/start-server" -> "start-server", 
           "middleware/linearize-middleware-stack" -> 
           "linearize-middleware-stack", 
           "clojure.tools.nrepl.middleware/unknown-op" -> "unknown-op", 
           "Integer/parseInt" -> "parseInt", 
           "clojure.tools.nrepl.middleware/log" -> "log", 
           "load-file/load-file-code" -> "load-file-code", 
           "System/getProperty" -> "getProperty", "t/send" -> "send", 
           "transport/bencode" -> "bencode", "transport/send" -> "send", 
           "server/start-server" -> "start-server", 
           "clojure.tools.nrepl.middleware/fn-transport" -> "fn-transport", 
           "clojure.tools.nrepl/version" -> "version", "clojure.main/repl" -> 
           "repl"}}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Arrowheads[0.01416632944182767], 
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         ArrowBox[{
           DynamicLocation["VertexID$9", Automatic, Center], 
           DynamicLocation["VertexID$26", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$9", Automatic, Center], 
           DynamicLocation["VertexID$88", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$9", Automatic, Center], 
           DynamicLocation["VertexID$95", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$10", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$10", Automatic, Center], 
           DynamicLocation["VertexID$22", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$11", Automatic, Center], 
           DynamicLocation["VertexID$12", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$16", Automatic, Center], 
           DynamicLocation["VertexID$93", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$18", Automatic, Center], 
           DynamicLocation["VertexID$70", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$19", Automatic, Center], 
           DynamicLocation["VertexID$11", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$19", Automatic, Center], {
            12.252697448413112`, -3.006211565983115}, {
            12.270991726935033`, -3.1886180152038737`}, {
            12.206999467692237`, -3.294737260972265}, {
            11.867272242681127`, -3.2947372609712193`}, {
            11.803279983438983`, -3.1886180152024344`}, {
            11.821574261962027`, -3.006211565981788}, 
            DynamicLocation["VertexID$19", Automatic, Center]}, SplineDegree -> 
           7]], 
         ArrowBox[{
           DynamicLocation["VertexID$19", Automatic, Center], 
           DynamicLocation["VertexID$80", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$14", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$28", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$74", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$81", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$91", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$21", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$22", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$22", Automatic, Center], 
           DynamicLocation["VertexID$21", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$24", Automatic, Center], 
           DynamicLocation["VertexID$17", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$26", Automatic, Center], {
            2.7428819480907967`, -10.19235456818157}, {
            2.706689990794334, -10.353773159776425`}, {
            2.6248910023430736`, -10.429737929690576`}, {
            2.3224626889217763`, -10.363871736448642`}, {
            2.2796626995723024`, -10.260770418845789`}, {
            2.313875674581239, -10.098920822533492`}, 
            DynamicLocation["VertexID$26", Automatic, Center]}, SplineDegree -> 
           7]], 
         ArrowBox[{
           DynamicLocation["VertexID$26", Automatic, Center], 
           DynamicLocation["VertexID$81", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$26", Automatic, Center], 
           DynamicLocation["VertexID$94", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$27", Automatic, Center], 
           DynamicLocation["VertexID$15", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$27", Automatic, Center], 
           DynamicLocation["VertexID$24", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$28", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$28", Automatic, Center], 
           DynamicLocation["VertexID$32", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$28", Automatic, Center], 
           DynamicLocation["VertexID$33", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$28", Automatic, Center], 
           DynamicLocation["VertexID$35", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$29", Automatic, Center], 
           DynamicLocation["VertexID$17", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$29", Automatic, Center], 
           DynamicLocation["VertexID$92", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$31", Automatic, Center], 
           DynamicLocation["VertexID$87", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$36", Automatic, Center], 
           DynamicLocation["VertexID$7", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$36", Automatic, Center], 
           DynamicLocation["VertexID$51", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$36", Automatic, Center], 
           DynamicLocation["VertexID$54", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$36", Automatic, Center], 
           DynamicLocation["VertexID$97", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$37", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$37", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$37", Automatic, Center], {
            1.2704183479568572`, -1.3218712044506278`}, {
            1.2267537712259045`, -1.4498204047822176`}, {
            1.1570569853035892`, -1.5083692839326908`}, {
            0.9046172655693356, -1.4649101803040938`}, {
            0.8585117311371865, -1.3864251950368232`}, {
            0.8601473386790106, -1.2512404402951893`}, 
            DynamicLocation["VertexID$37", Automatic, Center]}, SplineDegree -> 
           7]], 
         ArrowBox[{
           DynamicLocation["VertexID$37", Automatic, Center], 
           DynamicLocation["VertexID$41", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$37", Automatic, Center], 
           DynamicLocation["VertexID$75", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$37", Automatic, Center], 
           DynamicLocation["VertexID$76", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$38", Automatic, Center], 
           DynamicLocation["VertexID$39", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$38", Automatic, Center], 
           DynamicLocation["VertexID$62", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$38", Automatic, Center], 
           DynamicLocation["VertexID$82", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$40", Automatic, Center], 
           DynamicLocation["VertexID$5", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$40", Automatic, Center], 
           DynamicLocation["VertexID$6", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$40", Automatic, Center], 
           DynamicLocation["VertexID$51", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$40", Automatic, Center], 
           DynamicLocation["VertexID$97", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$41", Automatic, Center], {
            2.0297890470845785`, -1.6837653609359782`}, {
            2.0859721127568758`, -1.5478705815805949`}, {
            2.1669762392417056`, -1.490801639887304}, {
            2.4327360579953456`, -1.5701856089830777`}, {
            2.469168281143586, -1.6623334561095262`}, {
            2.4416120300794315`, -1.8067792277737578`}, 
            DynamicLocation["VertexID$41", Automatic, Center]}, SplineDegree -> 
           7]], 
         ArrowBox[{
           DynamicLocation["VertexID$41", Automatic, Center], 
           DynamicLocation["VertexID$92", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$42", Automatic, Center], 
           DynamicLocation["VertexID$59", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$42", Automatic, Center], 
           DynamicLocation["VertexID$72", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$42", Automatic, Center], 
           DynamicLocation["VertexID$73", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$42", Automatic, Center], 
           DynamicLocation["VertexID$81", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$43", Automatic, Center], 
           DynamicLocation["VertexID$44", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$43", Automatic, Center], 
           DynamicLocation["VertexID$96", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$44", Automatic, Center], 
           DynamicLocation["VertexID$47", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$45", Automatic, Center], 
           DynamicLocation["VertexID$40", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$45", Automatic, Center], 
           DynamicLocation["VertexID$51", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$45", Automatic, Center], 
           DynamicLocation["VertexID$52", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$45", Automatic, Center], 
           DynamicLocation["VertexID$54", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$45", Automatic, Center], 
           DynamicLocation["VertexID$90", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$45", Automatic, Center], 
           DynamicLocation["VertexID$97", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$47", Automatic, Center], 
           DynamicLocation["VertexID$8", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$49", Automatic, Center], 
           DynamicLocation["VertexID$59", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$50", Automatic, Center], 
           DynamicLocation["VertexID$92", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$51", Automatic, Center], {
            4.710799470502741, -7.175300481395198}, 
            DynamicLocation["VertexID$54", Automatic, Center]}]], 
         ArrowBox[{
           DynamicLocation["VertexID$53", Automatic, Center], 
           DynamicLocation["VertexID$57", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$54", Automatic, Center], {
            4.5426455028574155`, -7.041485091909607}, 
            DynamicLocation["VertexID$51", Automatic, Center]}]], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$54", Automatic, Center], {
            4.526476406666526, -7.615456710007559}, {
            4.450720480389983, -7.779476203963663}, {
            4.3436890582683825`, -7.838222294003231}, {
            4.051989367721713, -7.67280922215219}, {
            4.047458307064721, -7.550799804869621}, {
            4.149325723553496, -7.401587257737901}, 
            DynamicLocation["VertexID$54", Automatic, Center]}, SplineDegree -> 
           7]], 
         ArrowBox[{
           DynamicLocation["VertexID$54", Automatic, Center], 
           DynamicLocation["VertexID$97", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$56", Automatic, Center], 
           DynamicLocation["VertexID$1", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$56", Automatic, Center], 
           DynamicLocation["VertexID$38", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$56", Automatic, Center], 
           DynamicLocation["VertexID$89", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$57", Automatic, Center], 
           DynamicLocation["VertexID$52", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$58", Automatic, Center], 
           DynamicLocation["VertexID$85", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$60", Automatic, Center], 
           DynamicLocation["VertexID$41", Automatic, Center]}], 
         ArrowBox[
          BezierCurveBox[{
            DynamicLocation["VertexID$60", Automatic, Center], {
            2.001432398246912, -2.975676065452563}, {
            2.1543003788020396`, -2.9744918182786813`}, {
            2.24114768617553, -3.0299721525650174`}, {
            2.2642367631638214`, -3.316697064454298}, {
            2.1873862902281718`, -3.385359478482033}, {
            2.036298608875581, -3.4086518477017917`}, 
            DynamicLocation["VertexID$60", Automatic, Center]}, SplineDegree -> 
           7]], 
         ArrowBox[{
           DynamicLocation["VertexID$60", Automatic, Center], 
           DynamicLocation["VertexID$63", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$60", Automatic, Center], 
           DynamicLocation["VertexID$77", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$60", Automatic, Center], 
           DynamicLocation["VertexID$78", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$62", Automatic, Center], 
           DynamicLocation["VertexID$51", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$62", Automatic, Center], 
           DynamicLocation["VertexID$97", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$63", Automatic, Center], 
           DynamicLocation["VertexID$79", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$64", Automatic, Center], 
           DynamicLocation["VertexID$66", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$64", Automatic, Center], 
           DynamicLocation["VertexID$70", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$64", Automatic, Center], 
           DynamicLocation["VertexID$71", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$67", Automatic, Center], 
           DynamicLocation["VertexID$81", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$68", Automatic, Center], 
           DynamicLocation["VertexID$87", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$69", Automatic, Center], 
           DynamicLocation["VertexID$86", Automatic, Center]}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[{
           TagBox[
            
            DiskBox[{9.994405920071271, -6.676801734616214}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["\"send-ack\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -9.377698525161728}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["\"halted?\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.6650344735136917, -0.29414858801511556`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["\"read-bencode\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.3906037230417825, -1.3199069149135525`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["\"write-bencode\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.203706403045709, -5.281323958487509}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["\"repl\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            DiskBox[{3.521123491189, -5.551736851553995}, 0.0785075295589506],
             "DynamicName", BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox["\"repl-caught\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$6"], 
         TagBox[{
           TagBox[
            
            DiskBox[{5.3349703303745395`, -8.552757801520327}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$7"], 
           InsetBox[
            FormBox["\"skip-if-eol\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$7"], 
         TagBox[{
           TagBox[
            
            DiskBox[{10.57378547626521, -3.9650822326468904`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$8"], 
           InsetBox[
            FormBox["\"error\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$8"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.1614462405353219`, -9.979368195866595}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$9"], 
           InsetBox[
            FormBox["\"client\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$9"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.3824607379140992, -9.445566439576133}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$10"], 
           InsetBox[
            FormBox["\"client-session\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$10"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.102251691447151`, -2.8636803279966903`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$11"], 
           InsetBox[
            FormBox["\"code\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$11"], 
         TagBox[{
           TagBox[
            
            DiskBox[{14.067579565115189`, -2.8636803279898277`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$12"], 
           InsetBox[
            FormBox["\"code*\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$12"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -9.979100334440492}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$13"], 
           InsetBox[
            FormBox["\"colon\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$13"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.276383778623821, -12.406729824640376`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$14"], 
           InsetBox[
            FormBox["\"colored-output\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$14"], 
         TagBox[{
           TagBox[
            
            DiskBox[{8.724391223066043, -1.9098095302113833`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$15"], 
           InsetBox[
            FormBox["\"combine-responses\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$15"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.069224614703373`, -6.370689478767906}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$16"], 
           InsetBox[
            FormBox["\"connect\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$16"], 
         TagBox[{
           TagBox[
            
            DiskBox[{6.007706556478102, -1.7855356200993167`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$17"], 
           InsetBox[
            FormBox["\"e\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$17"], 
         TagBox[{
           TagBox[
            
            DiskBox[{11.22696144983241, -1.025863613848448}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$18"], 
           InsetBox[
            FormBox["\"handle-ack\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$18"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.037135855188009`, -2.863680327994653}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$19"], 
           InsetBox[
            FormBox["\"load-file-command\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$19"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.923093995979449, -11.583685929890816`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$20"], 
           InsetBox[
            FormBox["\"-main\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$20"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.3518483630714182, -10.209265515963228`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$21"], 
           InsetBox[
            FormBox["\"message\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$21", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$21"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.2896897780969683, -9.823536219799069}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$22"], 
           InsetBox[
            FormBox["\"new-session\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$22", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$22"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -10.580502143719256`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$23"], 
           InsetBox[
            FormBox["\"read-bencode\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$23", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$23"], 
         TagBox[{
           TagBox[
            
            DiskBox[{7.064359335075946, -1.809709948939441}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$24"], 
           InsetBox[
            FormBox["\"read-response-value\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$24", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$24"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -11.18190395299802}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$25"], 
           InsetBox[
            FormBox["\"reset-ack-port!\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$25", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$25"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.56764147431031, -9.965360980410168}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$26"], 
           InsetBox[
            FormBox["\"response-seq\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$26", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$26"], 
         TagBox[{
           TagBox[
            
            DiskBox[{7.992392952699907, -1.8423332169453421`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$27"], 
           InsetBox[
            FormBox["\"response-values\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$27", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$27"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.5250213097312617`, -11.34630691218678}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$28"], 
           InsetBox[
            FormBox["\"send-ack\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$28", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$28"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.841119484425262, -1.77727887530735}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$29"], 
           InsetBox[
            FormBox["\"wait-for-ack\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$29", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$29"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -11.783305762276784`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$30"], 
           InsetBox[
            FormBox["\"write-netstring\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$30", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$30"], 
         TagBox[{
           TagBox[
            
            DiskBox[{11.569225131955903`, -4.566484050931614}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$31"], 
           InsetBox[
            FormBox["\"project-base-dir\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$31", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$31"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.3969181194855884`, -12.17797968980205}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$32"], 
           InsetBox[
            FormBox["\"client\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$32", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$32"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.7133114723772995, -11.533783012035427`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$33"], 
           InsetBox[
            FormBox["\"connect\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$33", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$33"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -12.384707571555548`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$34"], 
           InsetBox[
            FormBox["\"dfunction\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$34", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$34"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8967110832445329, -12.02635341436845}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$35"], 
           InsetBox[
            FormBox["\"message\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$35", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$35"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.9789937443719445`, -7.728256999552721}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$36"], 
           InsetBox[
            FormBox["\"add-stdin\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$36", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$36"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.108322901129644, -1.0365502027405524`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$37"], 
           InsetBox[
            FormBox["\"bencode\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$37", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$37"], 
         TagBox[{
           TagBox[
            
            DiskBox[{7.768764282286444, -6.9247665466791855`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$38"], 
           InsetBox[
            FormBox["\"default-handler\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$38", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$38"], 
         TagBox[{
           TagBox[
            
            DiskBox[{8.227208723774188, -6.265188169842551}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$39"], 
           InsetBox[
            FormBox["\"default-middlewares\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$39", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$39"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.196045286959131, -6.234640030093891}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$40"], 
           InsetBox[
            FormBox["\"evaluate\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$40", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$40"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.1707474242218634`, -1.9627208308346935`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$41"], 
           InsetBox[
            FormBox["\"fn-transport\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$41", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$41"], 
         TagBox[{
           TagBox[
            
            DiskBox[{5.363632180917633, -10.391029587732307`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$42"], 
           InsetBox[
            FormBox["\"FnTransport\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$42", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$42"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.634048079415628`, -3.9650821530840563`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$43"], 
           InsetBox[
            FormBox["\"handle\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$43", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$43"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.568463643486368`, -3.9650821372734177`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$44"], 
           InsetBox[
            FormBox["\"handle*\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$44", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$44"], 
         TagBox[{
           TagBox[
            DiskBox[{3.755990314625951, -7.037689568486037}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$45"], 
           InsetBox[
            FormBox["\"interruptible-eval\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$45", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$45"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.28968977809696855`, -12.986109380834312`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$46"], 
           InsetBox[
            FormBox["\"linearize-middleware-stack\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$46", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$46"], 
         TagBox[{
           TagBox[
            
            DiskBox[{11.503619810685088`, -3.965082170008794}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$47"], 
           InsetBox[
            FormBox["\"log\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$47", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$47"], 
         TagBox[{
           TagBox[
            
            DiskBox[{5.24114095517647, -12.986109380834312`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$48"], 
           InsetBox[
            FormBox["\"piped-transports\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$48", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$48"], 
         TagBox[{
           TagBox[
            
            DiskBox[{7.3483681089050945`, -10.195825704247918`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$49"], 
           InsetBox[
            FormBox["\"pr-values\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$49", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$49"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.892614201674054, -1.2409471019735636`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$50"], 
           InsetBox[
            FormBox["\"QueueTransport\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$50", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$50"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.842163591729619, -6.837666999825958}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$51"], 
           InsetBox[
            FormBox["\"response-for\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$51", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$51"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.327557329174041, -7.132031881857443}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$52"], 
           InsetBox[
            FormBox["\"returning\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$52", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$52"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.28968977809696916`, -7.326780510530847}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$53"], 
           InsetBox[
            FormBox["\"Server\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$53", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$53"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.411281381630536, -7.379118573478845}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$54"], 
           InsetBox[
            FormBox["\"session\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$54", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$54"], 
         TagBox[{
           TagBox[
            
            DiskBox[{10.192592132255973`, -12.986109380834312`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$55"], 
           InsetBox[
            FormBox["\"set-descriptor!\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$55", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$55"], 
         TagBox[{
           TagBox[
            
            DiskBox[{9.156280282186945, -6.995568620392309}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$56"], 
           InsetBox[
            FormBox["\"start-server\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$56", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$56"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.1655714930108383`, -7.2410712082726585`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$57"], 
           InsetBox[
            FormBox["\"stop-server\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$57", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$57"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.069224614703373`, -5.167885860210378}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$58"], 
           InsetBox[
            FormBox["\"def-pp-test\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$58", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$58"], 
         TagBox[{
           TagBox[
            
            DiskBox[{6.513297651404205, -10.274125221609218`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$59"], 
           InsetBox[
            FormBox["\"Transport\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$59", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$59"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.805945238760559, -3.2093097718952714`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$60"], 
           InsetBox[
            FormBox["\"tty\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$60", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$60"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -6.97209128804667}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$61"], 
           InsetBox[
            FormBox["\"tty-greeting\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$61", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$61"], 
         TagBox[{
           TagBox[
            
            DiskBox[{6.108000876503521, -6.913959940968844}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$62"], 
           InsetBox[
            FormBox["\"unknown-op\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$62", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$62"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.2252627410223162`, -4.087660058570919}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$63"], 
           InsetBox[
            FormBox["\"uuid\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$63", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$63"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.284572097779364`, -1.0257002030399827`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$64"], 
           InsetBox[
            FormBox["\"wrap-describe\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$64", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$64"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -7.573493097325434}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$65"], 
           InsetBox[
            FormBox["\"wrap-load-file\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$65", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$65"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.911487779574335`, -0.2896897780969685}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$66"], 
           InsetBox[
            FormBox["\"response-for\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$66", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$66"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.296289551484485, -10.067591169253232`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$67"], 
           InsetBox[
            FormBox["\"def-repl-test\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$67", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$67"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.56922409745084, -4.566484050931614}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$68"], 
           InsetBox[
            FormBox["\"project-base-dir\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$68", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$68"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.069224614703373`, -5.769287669489142}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$69"], 
           InsetBox[
            FormBox["\"repl-server-fixture\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$69", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$69"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.17422221643766, -1.02572026199461}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$70"], 
           InsetBox[
            FormBox["\"send\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$70", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$70"], 
         TagBox[{
           TagBox[
            
            DiskBox[{13.91110057061486, -1.762278518715889}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$71"], 
           InsetBox[
            FormBox["\"version\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$71", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$71"], 
         TagBox[{
           TagBox[
            
            DiskBox[{5.880430814138513, -9.84599326085204}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$72"], 
           InsetBox[
            FormBox["\"keywordize-keys\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$72", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$72"], 
         TagBox[{
           TagBox[
            
            DiskBox[{5.979926785813577, -10.812013976596731`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$73"], 
           InsetBox[
            FormBox["\"stringify-keys\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$73", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$73"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.6080917924852414`, -11.970538011835515`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$74"], 
           InsetBox[
            FormBox["\"parseInt\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$74", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$74"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.28968977809696916`, -0.7274120023232689}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$75"], 
           InsetBox[
            FormBox["\"input-stream\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$75", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$75"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.312715881426485, -0.2896897780969683}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$76"], 
           InsetBox[
            FormBox["\"output-stream\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$76", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$76"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.0571797736567432`, -3.404312046767859}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$77"], 
           InsetBox[
            FormBox["\"reader\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$77", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$77"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.4139767528721467`, -3.912205889294863}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$78"], 
           InsetBox[
            FormBox["\"writer\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$78", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$78"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.630824117078083, -4.701944402293572}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$79"], 
           InsetBox[
            FormBox["\"randomUUID\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$79", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$79"], 
         TagBox[{
           TagBox[
            
            DiskBox[{11.070869664291559`, -2.8636803279905534`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$80"], 
           InsetBox[
            FormBox["\"load-file-code\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$80", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$80"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.8150176308878687`, -10.550843139656651`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$81"], 
           InsetBox[
            FormBox["\"MAX_VALUE\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$81", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$81"], 
         TagBox[{
           TagBox[
            
            DiskBox[{8.218611029184176, -7.552404855340605}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$82"], 
           InsetBox[
            FormBox["\"linearize-middleware-stack\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$82", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$82"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -8.174894906604198}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$83"], 
           InsetBox[
            FormBox["\"bar\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$83", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$83"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.569224614703373`, -8.776296715882964}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$84"], 
           InsetBox[
            FormBox["\"function\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$84", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$84"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.069224614703373`, -5.167885860210378}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$85"], 
           InsetBox[
            FormBox["\"pretty-print-available?\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$85", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$85"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.069224614703373`, -5.769287669489142}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$86"], 
           InsetBox[
            FormBox["\"start-server\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$86", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$86"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.568207508615021`, -4.566484050931614}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$87"], 
           InsetBox[
            FormBox["\"getProperty\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$87", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$87"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.3014246510738539`, -9.18150507996414}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$88"], 
           InsetBox[
            FormBox["\"nanoTime\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$88", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$88"], 
         TagBox[{
           TagBox[
            
            DiskBox[{9.958452487632522, -7.416518151397481}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$89"], 
           InsetBox[
            FormBox["\"bencode\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$89", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$89"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.0972477728491024`, -7.620828795458963}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$90"], 
           InsetBox[
            FormBox["\"currentThread\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$90", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$90"], 
         TagBox[{
           TagBox[
            DiskBox[{2.7455166012665826`, -12.386484577510357`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$91"], 
           InsetBox[
            FormBox["\"sleep\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$91", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$91"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.55747344167318, -1.7723195397237026`}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$92"], 
           InsetBox[
            FormBox["\"MILLISECONDS\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$92", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$92"], 
         TagBox[{
           TagBox[
            
            DiskBox[{12.069224614703373`, -6.370689478767906}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$93"], 
           InsetBox[
            FormBox["\"bencode\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$93", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$93"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.7852061463173707`, -9.19428347322441}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$94"], 
           InsetBox[
            FormBox["\"recv\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$94", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$94"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.787277709632952, -9.132137357714265}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$95"], 
           InsetBox[
            FormBox["\"send\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$95", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$95"], 
         TagBox[{
           TagBox[
            
            DiskBox[{14.564663753141538`, -3.96508224165285}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$96"], 
           InsetBox[
            FormBox["\"recv\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$96", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$96"], 
         TagBox[{
           TagBox[
            
            DiskBox[{4.832209092883935, -7.060845113707469}, 
             0.0785075295589506], "DynamicName", BoxID -> "VertexID$97"], 
           InsetBox[
            FormBox["\"send\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$97", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$97"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{15.421238137286444`, 
         824.4179687500003}, {-368.6868571674572, 348.76928386967415`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    ImageSize->{824.41796875, Automatic}]}], ";"}]], "Input",
 CellChangeTimes->{{3.610645389910426*^9, 3.610645405611773*^9}}],

Cell[BoxData[
 RowBox[{"let", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vbn", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"varsByNamespace", "[", "nreplGraph", "]"}], ",", " ", 
        "First"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"cf", "=", 
      RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"vclr", "=", " ", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", "i"}], "}"}], ",", " ", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", "=", 
              RowBox[{"cf", "[", 
               FractionBox[
                RowBox[{"First", "[", "i", "]"}], 
                RowBox[{"Length", "[", "vbn", "]"}]], "]"}]}], "}"}], ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "\[Rule]", " ", "c"}], "&"}], ")"}], "/@", 
               RowBox[{
               "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              ")"}]}]}], "]"}]}], "]"}], ",", "vbn"}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"setGraphOpts", "[", 
      RowBox[{"nreplGraph", ",", " ", 
       RowBox[{"VertexStyle", "\[Rule]", " ", "vclr"}]}], "]"}], "//", 
     "addUnqualifiedNameLabels"}], "//", "addToolTips"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.610648223700913*^9, 3.610648336409252*^9}, {
  3.6106484194713306`*^9, 3.6106488590605297`*^9}, {3.6106496096599607`*^9, 
  3.610649613815805*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.610649263869487*^9, 3.610649263984744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"varsByNamespace", "[", "nreplGraph", "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], "//", "Sort"}], "//", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Print", ",", "#"}], "]"}], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6106500864094267`*^9, 3.610650111153758*^9}, 
   3.610650181253422*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"upperCaseStartQ", "[", "s_String", "]"}], ":=", " ", 
  RowBox[{"StringMatchQ", "[", 
   RowBox[{"s", ",", 
    RowBox[{
     RowBox[{"_", "?", "UpperCaseQ"}], "~~", "___"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6106504066184607`*^9, 3.610650482189412*^9}, {
  3.610650519045073*^9, 3.610650556515773*^9}}],

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{"\"\<Bla\>\"", ",", 
   RowBox[{
    RowBox[{"_", "?", "UpperCaseQ"}], "~~", "___"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.610650602185617*^9, 3.610650607609894*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"varsByNamespace", "[", "nreplGraph", "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], "//", "Sort"}], "//", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{
        RowBox[{"\[Not]", 
         RowBox[{"upperCaseStartQ", "[", "#", "]"}]}], "&"}]}], "]"}], 
     "&"}]}], "//", 
   RowBox[{
    RowBox[{"Print", "/@", "#"}], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6106500864094267`*^9, 3.610650111153758*^9}, 
   3.610650181253422*^9, {3.610650232639723*^9, 3.6106503371449537`*^9}, {
   3.610650377529264*^9, 3.610650401327703*^9}, {3.610650466302096*^9, 
   3.610650477333137*^9}, {3.61065062499671*^9, 3.6106506536822968`*^9}}],

Cell[BoxData[
 RowBox[{"?", "addToolTips"}]], "Input",
 CellChangeTimes->{{3.61065266142118*^9, 3.610652664042603*^9}}],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Tooltip", "[", 
     RowBox[{
     "\"\<fish\>\"", ",", " ", 
      "\"\<Now is the winter\\n of our discontent\>\""}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[DirectedEdge]", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.610652652436116*^9, 3.610652747297868*^9}, {
  3.610653731861341*^9, 3.610653732979477*^9}}],

Cell[BoxData[
 RowBox[{"?", "Graph"}]], "Input",
 CellChangeTimes->{{3.6106535525097523`*^9, 3.610653553444936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Scan", "[", 
   RowBox[{"Print", ",", " ", 
    RowBox[{"{", 
     RowBox[{"ns", "[", 
      RowBox[{"bla", ",", " ", 
       RowBox[{"ns", "[", "gra", "]"}]}], "]"}], "}"}], ",", "\[Infinity]"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.610733354686872*^9, 3.6107333973033447`*^9}}]
}, Open  ]]
},
WindowSize->{960, 1156},
WindowMargins->{{Automatic, -224}, {896, Automatic}},
ShowSelection->True,
InputAutoReplacements->{
 "\\" -> "\:2024", "--" -> "\:2011", "-=" -> "\:02cd", "''" -> "\:0589", "**" -> 
  "\:204e", "\[DownQuestion]" -> "\:2047", "!!" -> "\:203c"},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"menloExperiment.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 95, 1, 30, "Input"],
Cell[655, 23, 177, 3, 33, "Input",
 InitializationCell->True],
Cell[835, 28, 274, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1134, 35, 119, 2, 80, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1278, 41, 133, 2, 44, "Subsection",
 InitializationCell->True],
Cell[1414, 45, 372, 9, 28, "Input",
 InitializationCell->True],
Cell[1789, 56, 819, 21, 148, "Input",
 InitializationCell->True],
Cell[2611, 79, 232, 5, 28, "Input",
 InitializationCell->True],
Cell[2846, 86, 185, 4, 28, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[3068, 95, 118, 2, 36, "Subsection",
 InitializationCell->True],
Cell[3189, 99, 155, 3, 33, "Input",
 InitializationCell->True],
Cell[3347, 104, 196, 4, 33, "Input",
 InitializationCell->True],
Cell[3546, 110, 891, 23, 75, "Input",
 InitializationCell->True],
Cell[4440, 135, 244, 7, 31, "Input",
 InitializationCell->True],
Cell[4687, 144, 278, 8, 30, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[5002, 157, 179, 3, 36, "Subsection",
 InitializationCell->True],
Cell[5184, 162, 324, 8, 28, "Input",
 InitializationCell->True],
Cell[5511, 172, 128, 2, 29, "Text",
 InitializationCell->True],
Cell[5642, 176, 313, 7, 28, "Input",
 InitializationCell->True],
Cell[5958, 185, 398, 11, 28, "Input",
 InitializationCell->True],
Cell[6359, 198, 286, 7, 28, "Input",
 InitializationCell->True],
Cell[6648, 207, 258, 7, 28, "Input",
 InitializationCell->True],
Cell[6909, 216, 125, 2, 29, "Text",
 InitializationCell->True],
Cell[7037, 220, 453, 11, 28, "Input",
 InitializationCell->True],
Cell[7493, 233, 1257, 33, 131, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[8787, 271, 180, 3, 36, "Subsection",
 InitializationCell->True],
Cell[8970, 276, 364, 8, 31, "Input",
 InitializationCell->True],
Cell[9337, 286, 436, 11, 31, "Input",
 InitializationCell->True],
Cell[9776, 299, 392, 9, 31, "Input",
 InitializationCell->True],
Cell[10171, 310, 430, 11, 33, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10638, 326, 123, 2, 36, "Subsection",
 InitializationCell->True],
Cell[10764, 330, 301, 6, 30, "Text",
 InitializationCell->True],
Cell[11068, 338, 617, 13, 53, "Input",
 InitializationCell->True],
Cell[11688, 353, 1598, 32, 103, "Input",
 InitializationCell->True],
Cell[13289, 387, 701, 15, 30, "Input",
 InitializationCell->True],
Cell[13993, 404, 466, 13, 31, "Input",
 InitializationCell->True],
Cell[14462, 419, 2318, 50, 131, "Input",
 InitializationCell->True],
Cell[16783, 471, 1213, 22, 31, "Input",
 InitializationCell->True],
Cell[17999, 495, 278, 7, 30, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[18314, 507, 120, 2, 36, "Subsection",
 InitializationCell->True],
Cell[18437, 511, 258, 7, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[18732, 523, 122, 2, 36, "Subsection",
 InitializationCell->True],
Cell[18857, 527, 284, 8, 31, "Input",
 InitializationCell->True],
Cell[19144, 537, 1045, 25, 94, "Input",
 InitializationCell->True],
Cell[20192, 564, 1215, 31, 125, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[21444, 600, 123, 2, 36, "Subsection",
 InitializationCell->True],
Cell[21570, 604, 221, 6, 31, "Input",
 InitializationCell->True],
Cell[21794, 612, 531, 14, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[22362, 631, 125, 2, 44, "Subsection",
 InitializationCell->True],
Cell[22490, 635, 164, 3, 31, "Input",
 InitializationCell->True],
Cell[22657, 640, 227, 6, 31, "Input",
 InitializationCell->True],
Cell[22887, 648, 187, 4, 31, "Input",
 InitializationCell->True],
Cell[23077, 654, 276, 6, 31, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23402, 666, 183, 3, 50, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[23610, 673, 131, 2, 44, "Subsection",
 InitializationCell->True],
Cell[23744, 677, 375, 8, 31, "Input",
 InitializationCell->True],
Cell[24122, 687, 461, 12, 31, "Input",
 InitializationCell->True],
Cell[24586, 701, 438, 10, 31, "Input",
 InitializationCell->True],
Cell[25027, 713, 623, 13, 49, "Input",
 InitializationCell->True],
Cell[25653, 728, 1090, 27, 85, "Input",
 InitializationCell->True],
Cell[26746, 757, 450, 13, 33, "Input",
 InitializationCell->True],
Cell[27199, 772, 414, 12, 33, "Input",
 InitializationCell->True],
Cell[27616, 786, 600, 15, 33, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[28253, 806, 133, 2, 36, "Subsection",
 InitializationCell->True],
Cell[28389, 810, 476, 12, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[28902, 827, 147, 2, 36, "Subsection",
 InitializationCell->True],
Cell[29052, 831, 258, 5, 31, "Input",
 InitializationCell->True],
Cell[29313, 838, 2160, 49, 222, "Input",
 InitializationCell->True],
Cell[31476, 889, 836, 23, 74, "Input",
 InitializationCell->True],
Cell[32315, 914, 1090, 19, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[33442, 938, 140, 2, 36, "Subsection",
 InitializationCell->True],
Cell[33585, 942, 373, 9, 33, "Input",
 InitializationCell->True],
Cell[33961, 953, 326, 8, 33, "Input",
 InitializationCell->True],
Cell[34290, 963, 2443, 59, 233, "Input",
 InitializationCell->True],
Cell[36736, 1024, 447, 9, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[37220, 1038, 129, 2, 36, "Subsection",
 InitializationCell->True],
Cell[37352, 1042, 257, 5, 33, "Input",
 InitializationCell->True],
Cell[37612, 1049, 1057, 26, 112, "Input",
 InitializationCell->True],
Cell[38672, 1077, 229, 5, 33, "Input",
 InitializationCell->True],
Cell[38904, 1084, 547, 11, 33, "Input",
 InitializationCell->True],
Cell[39454, 1097, 3118, 67, 347, "Input",
 InitializationCell->True],
Cell[42575, 1166, 656, 17, 53, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[43268, 1188, 139, 2, 36, "Subsection",
 InitializationCell->True],
Cell[43410, 1192, 399, 8, 53, "Input",
 InitializationCell->True],
Cell[43812, 1202, 497, 12, 53, "Input",
 InitializationCell->True],
Cell[44312, 1216, 404, 9, 49, "Input",
 InitializationCell->True],
Cell[44719, 1227, 350, 7, 31, "Input",
 InitializationCell->True],
Cell[45072, 1236, 648, 14, 49, "Input",
 InitializationCell->True],
Cell[45723, 1252, 436, 10, 49, "Input",
 InitializationCell->True],
Cell[46162, 1264, 1304, 24, 109, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[47503, 1293, 170, 3, 36, "Subsection",
 InitializationCell->True],
Cell[47676, 1298, 162, 3, 31, "Input",
 InitializationCell->True],
Cell[47841, 1303, 153, 2, 30, "Text",
 InitializationCell->True],
Cell[47997, 1307, 216, 5, 31, "Input",
 InitializationCell->True],
Cell[48216, 1314, 190, 4, 31, "Input",
 InitializationCell->True],
Cell[48409, 1320, 233, 6, 33, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[48679, 1331, 125, 2, 36, "Subsection",
 InitializationCell->True],
Cell[48807, 1335, 191, 4, 31, "Input",
 InitializationCell->True],
Cell[49001, 1341, 328, 8, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[49366, 1354, 131, 2, 36, "Subsection",
 InitializationCell->True],
Cell[49500, 1358, 148, 2, 30, "Text",
 InitializationCell->True],
Cell[49651, 1362, 203, 5, 31, "Input",
 InitializationCell->True],
Cell[49857, 1369, 290, 6, 33, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[50184, 1380, 130, 2, 36, "Subsection",
 InitializationCell->True],
Cell[50317, 1384, 191, 4, 31, "Input",
 InitializationCell->True],
Cell[50511, 1390, 335, 9, 31, "Input",
 InitializationCell->True],
Cell[50849, 1401, 2404, 53, 145, "Input",
 InitializationCell->True],
Cell[53256, 1456, 2566, 58, 232, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[55859, 1519, 220, 3, 36, "Subsection",
 InitializationCell->True],
Cell[56082, 1524, 348, 6, 31, "Input",
 InitializationCell->True],
Cell[56433, 1532, 1246, 28, 67, "Input",
 InitializationCell->True],
Cell[57682, 1562, 652, 19, 49, "Input",
 InitializationCell->True],
Cell[58337, 1583, 149, 2, 30, "Text",
 InitializationCell->True],
Cell[58489, 1587, 537, 14, 49, "Input",
 InitializationCell->True],
Cell[59029, 1603, 326, 7, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[59392, 1615, 189, 3, 36, "Subsection",
 InitializationCell->True],
Cell[59584, 1620, 327, 7, 33, "Input",
 InitializationCell->True],
Cell[59914, 1629, 1330, 31, 69, "Input",
 InitializationCell->True],
Cell[61247, 1662, 353, 8, 31, "Input",
 InitializationCell->True],
Cell[61603, 1672, 1315, 27, 51, "Input",
 InitializationCell->True],
Cell[62921, 1701, 941, 22, 51, "Input",
 InitializationCell->True],
Cell[63865, 1725, 134, 3, 30, "Input",
 InitializationCell->True],
Cell[64002, 1730, 2163, 50, 204, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[66214, 1786, 118, 2, 50, "Section",
 InitializationCell->True],
Cell[66335, 1790, 360, 7, 49, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[66720, 1801, 119, 2, 44, "Subsection",
 InitializationCell->True],
Cell[66842, 1805, 397, 10, 33, "Input",
 InitializationCell->True],
Cell[67242, 1817, 245, 4, 33, "Input",
 InitializationCell->True],
Cell[67490, 1823, 886, 17, 53, "Input",
 InitializationCell->True],
Cell[68379, 1842, 191, 3, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68607, 1850, 121, 2, 44, "Subsection",
 InitializationCell->True],
Cell[68731, 1854, 226, 5, 30, "Text",
 InitializationCell->True],
Cell[68960, 1861, 160, 3, 31, "Input",
 InitializationCell->True],
Cell[69123, 1866, 268, 6, 31, "Input",
 InitializationCell->True],
Cell[69394, 1874, 285, 7, 33, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[69716, 1886, 128, 2, 36, "Subsection",
 InitializationCell->True],
Cell[69847, 1890, 479, 10, 73, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70375, 1906, 121, 2, 80, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[70521, 1912, 122, 2, 44, "Subsection",
 InitializationCell->True],
Cell[70646, 1916, 340, 7, 49, "Text",
 InitializationCell->True],
Cell[70989, 1925, 367, 9, 33, "Input",
 InitializationCell->True],
Cell[71359, 1936, 157, 3, 31, "Input",
 InitializationCell->True],
Cell[71519, 1941, 214, 4, 31, "Input",
 InitializationCell->True],
Cell[71736, 1947, 164, 4, 33, "Input",
 InitializationCell->True],
Cell[71903, 1953, 161, 3, 31, "Input",
 InitializationCell->True],
Cell[72067, 1958, 344, 8, 33, "Input",
 InitializationCell->True],
Cell[72414, 1968, 157, 3, 31, "Input",
 InitializationCell->True],
Cell[72574, 1973, 232, 5, 33, "Input",
 InitializationCell->True],
Cell[72809, 1980, 278, 5, 31, "Input",
 InitializationCell->True],
Cell[73090, 1987, 241, 5, 33, "Input",
 InitializationCell->True],
Cell[73334, 1994, 243, 5, 33, "Input",
 InitializationCell->True],
Cell[73580, 2001, 159, 3, 31, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[73776, 2009, 126, 2, 36, "Subsection",
 InitializationCell->True],
Cell[73905, 2013, 482, 12, 34, "Text",
 InitializationCell->True],
Cell[74390, 2027, 337, 8, 33, "Input",
 InitializationCell->True],
Cell[74730, 2037, 263, 6, 33, "Input",
 InitializationCell->True],
Cell[74996, 2045, 654, 16, 33, "Input",
 InitializationCell->True],
Cell[75653, 2063, 68, 1, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75770, 2070, 129, 2, 80, "Section",
 InitializationCell->True],
Cell[75902, 2074, 192, 4, 30, "Text",
 InitializationCell->True],
Cell[76097, 2080, 196, 4, 33, "Input",
 InitializationCell->True],
Cell[76296, 2086, 364, 7, 33, "Input",
 InitializationCell->True],
Cell[76663, 2095, 351, 8, 33, "Input",
 InitializationCell->True],
Cell[77017, 2105, 310, 7, 33, "Input",
 InitializationCell->True],
Cell[77330, 2114, 153, 2, 30, "Text",
 InitializationCell->True],
Cell[77486, 2118, 317, 8, 33, "Input",
 InitializationCell->True],
Cell[77806, 2128, 517, 10, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[78348, 2142, 122, 2, 44, "Subsection",
 InitializationCell->True],
Cell[78473, 2146, 1226, 30, 152, "Input",
 InitializationCell->True],
Cell[79702, 2178, 267, 6, 31, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80018, 2190, 131, 2, 80, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[80174, 2196, 185, 3, 44, "Subsection",
 InitializationCell->True],
Cell[80362, 2201, 246, 6, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[80645, 2212, 123, 2, 44, "Subsection",
 InitializationCell->True],
Cell[80771, 2216, 4750, 110, 530, "Input",
 InitializationCell->True],
Cell[85524, 2328, 232, 5, 30, "Text",
 InitializationCell->True],
Cell[85759, 2335, 241, 4, 49, "Text"],
Cell[86003, 2341, 186, 4, 31, "Input"],
Cell[86192, 2347, 135, 2, 30, "Input"],
Cell[86330, 2351, 524, 11, 31, "Input"],
Cell[86857, 2364, 3294, 69, 128, "Input"],
Cell[90154, 2435, 2217, 47, 149, "Input",
 InitializationCell->True],
Cell[92374, 2484, 450, 9, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[92861, 2498, 174, 3, 44, "Subsection",
 InitializationCell->True],
Cell[93038, 2503, 259, 6, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[93322, 2513, 130, 2, 35, "Subsubsection",
 InitializationCell->True],
Cell[93455, 2517, 2138, 48, 239, "Input",
 InitializationCell->True],
Cell[95596, 2567, 242, 5, 30, "Text",
 InitializationCell->True],
Cell[95841, 2574, 885, 19, 69, "Input",
 InitializationCell->True],
Cell[96729, 2595, 279, 6, 31, "Input",
 InitializationCell->True],
Cell[97011, 2603, 377, 8, 33, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97437, 2617, 125, 2, 44, "Subsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[97587, 2623, 193, 3, 35, "Subsubsection",
 InitializationCell->True],
Cell[97783, 2628, 1462, 34, 71, "Input",
 InitializationCell->True],
Cell[99248, 2664, 900, 19, 103, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[100185, 2688, 134, 2, 35, "Subsubsection",
 InitializationCell->True],
Cell[100322, 2692, 172, 3, 33, "Input",
 InitializationCell->True],
Cell[100497, 2697, 1084, 23, 89, "Input",
 InitializationCell->True],
Cell[101584, 2722, 2312, 49, 49, "Input",
 InitializationCell->True],
Cell[103899, 2773, 1210, 25, 111, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[105146, 2803, 128, 2, 35, "Subsubsection",
 InitializationCell->True],
Cell[105277, 2807, 703, 14, 31, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106029, 2827, 126, 2, 44, "Subsection",
 InitializationCell->True],
Cell[106158, 2831, 220, 5, 31, "Input",
 InitializationCell->True],
Cell[106381, 2838, 302, 7, 31, "Input",
 InitializationCell->True],
Cell[106686, 2847, 919, 19, 85, "Input",
 InitializationCell->True],
Cell[107608, 2868, 1025, 26, 67, "Input",
 InitializationCell->True],
Cell[108636, 2896, 518, 11, 31, "Input",
 InitializationCell->True],
Cell[109157, 2909, 434, 11, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[109628, 2925, 129, 2, 44, "Subsection",
 InitializationCell->True],
Cell[109760, 2929, 670, 14, 31, "Input",
 InitializationCell->True],
Cell[110433, 2945, 291, 7, 31, "Input",
 InitializationCell->True],
Cell[110727, 2954, 318, 8, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111094, 2968, 98, 1, 80, "Section"],
Cell[111195, 2971, 720, 12, 125, "Text"],
Cell[111918, 2985, 358, 6, 49, "Text"],
Cell[112279, 2993, 249, 5, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112565, 3003, 119, 2, 80, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[112709, 3009, 136, 2, 44, "Subsection",
 InitializationCell->True],
Cell[112848, 3013, 545, 15, 33, "Input",
 InitializationCell->True],
Cell[113396, 3030, 485, 11, 31, "Input",
 InitializationCell->True],
Cell[113884, 3043, 457, 12, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[114378, 3060, 132, 2, 44, "Subsection",
 InitializationCell->True],
Cell[114513, 3064, 361, 9, 31, "Input",
 InitializationCell->True],
Cell[114877, 3075, 188, 4, 31, "Input",
 InitializationCell->True],
Cell[115068, 3081, 615, 15, 33, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115732, 3102, 154, 2, 80, "Section"],
Cell[115889, 3106, 350, 8, 51, "Input"],
Cell[116242, 3116, 1228, 30, 75, "Input"],
Cell[117473, 3148, 1063, 23, 54, "Input"],
Cell[118539, 3173, 94, 1, 30, "Input"],
Cell[118636, 3176, 1417, 33, 116, "Input"],
Cell[120056, 3211, 1484, 36, 155, "Input"],
Cell[121543, 3249, 302, 6, 49, "Input"],
Cell[121848, 3257, 75527, 1600, 782, "Input"],
Cell[197378, 4859, 1779, 46, 149, "Input"],
Cell[199160, 4907, 92, 1, 31, InheritFromParent],
Cell[199255, 4910, 427, 12, 33, "Input"],
Cell[199685, 4924, 347, 8, 31, "Input"],
Cell[200035, 4934, 225, 5, 33, "Input"],
Cell[200263, 4941, 815, 21, 33, "Input"],
Cell[201081, 4964, 119, 2, 31, "Input"],
Cell[201203, 4968, 419, 11, 33, "Input"],
Cell[201625, 4981, 116, 2, 31, "Input"],
Cell[201744, 4985, 327, 9, 33, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
